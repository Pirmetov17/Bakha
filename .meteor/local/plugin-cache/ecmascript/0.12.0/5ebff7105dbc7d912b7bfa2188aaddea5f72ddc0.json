{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/handlers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/handlers.js","filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/handlers.js","passPerPreset":false,"envName":"development","cwd":"/Users/admin/simple-todos","root":"/Users/admin/simple-todos","presets":[],"generatorOpts":{"filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/handlers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/handlers.js"}},"code":"let Conf;\nmodule.link(\"./context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 0);\nlet Instrumenter;\nmodule.link(\"./services/instrumenter\", {\n  default(v) {\n    Instrumenter = v;\n  }\n\n}, 1);\nlet Core;\nmodule.link(\"./services/core\", {\n  default(v) {\n    Core = v;\n  }\n\n}, 2);\nlet ReportService;\nmodule.link(\"./report/report-service\", {\n  default(v) {\n    ReportService = v;\n  }\n\n}, 3);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 4);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 5);\n\nshowCoverage = function (params, req, res, next) {\n  let options = {\n    'filepath': params.query.p\n  };\n  let reportService = new ReportService();\n  reportService.generateReport(res, 'http', options);\n};\n\ngetAsset = function (params, req, res, next) {\n  var assetsDir = path.join(path.resolve('.'), 'assets/packages/lmieulet_meteor-coverage/assets/'),\n      filename = params.filename;\n  fs.exists(path.join(assetsDir, filename), function (exists) {\n    if (!exists) {\n      fs.exists(path.join(assetsDir, '/vendor/', filename), function (exists) {\n        /* istanbul ignore else */\n        if (!exists) return next();\n        fs.readFile(assetsDir + '/vendor/' + filename, function (err, fileContent) {\n          /* istanbul ignore else */\n          if (err) throw err;\n          res.end(fileContent);\n        });\n      });\n    } else {\n      fs.readFile(assetsDir + '/' + filename, function (err, fileContent) {\n        /* istanbul ignore else */\n        if (err) throw err;\n        res.end(fileContent);\n      });\n    }\n  });\n};\n\naddClientCoverage = function (params, req, res, next) {\n  var body = req.body;\n  /* istanbul ignore else */\n\n  if (!body) {\n    res.writeHead(400);\n    res.end();\n  }\n\n  var clientCoverage;\n\n  for (var property in body) {\n    /* istanbul ignore else */\n    if (body.hasOwnProperty(property)) {\n      clientCoverage = body[property];\n    }\n  }\n\n  if (clientCoverage) {\n    Core.mergeCoverageWith(clientCoverage);\n    res.end('{\"type\":\"success\"}');\n  } else {\n    res.writeHead(400);\n    res.end('Nothing has been imported');\n  }\n};\n\nexportFile = function (params, req, res, next) {\n  var _type = params.type;\n  /* istanbul ignore next: ternary operator */\n\n  type = Conf.reportTypes.allowed.indexOf(_type) > -1 ? _type : 'coverage';\n\n  try {\n    let reportService = new ReportService();\n    reportService.generateReport(res, type, {});\n  } catch (e) {\n    Log.error('Failed to export', e, e.stack);\n    res.writeHead(400);\n    res.end('Nothing has been export');\n  }\n};\n\nimportCoverage = function (params, req, res, next) {\n  try {\n    Core.importCoverage(res);\n  } catch (e) {\n    Log.error('Failed to import', e, e.stack);\n    res.writeHead(400);\n    res.end('No file has been import');\n  }\n};\n\ninstrumentClientJs = function (params, req, res, next) {\n  var fileurl = req.url.split('?')[0];\n\n  if (Instrumenter.shallInstrumentClientScript(fileurl)) {\n    var path, pathLabel; // Either a package\n\n    if (req.url.indexOf('/packages') === 0) {\n      path = '../web.browser';\n      pathLabel = path + fileurl;\n    } else if (req.url.indexOf('/app') === 0) {\n      // Or the app/app.js\n      path = '../web.browser';\n      pathLabel = path + fileurl;\n    } else {\n      // Or a public file\n      path = '../web.browser/app';\n      pathLabel = path + fileurl;\n    }\n\n    res.setHeader('Content-type', 'application/javascript');\n    fs.exists(path + fileurl, function (exists) {\n      /* istanbul ignore else */\n      if (!exists) return next();\n      fs.readFile(path + fileurl, 'utf8', function (err, fileContent) {\n        /* istanbul ignore else */\n        if (err) return next();\n        Instrumenter.instrumentJs(fileContent, pathLabel, function (err, data) {\n          /* istanbul ignore else */\n          if (err) throw err;\n          res.end(data);\n        });\n      });\n    });\n  } else {\n    next();\n  }\n};\n\nmodule.exportDefault(Handlers = {\n  showCoverage,\n  getAsset,\n  addClientCoverage,\n  instrumentClientJs,\n  exportFile,\n  importCoverage\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/handlers.js"],"names":["Conf","module","link","default","v","Instrumenter","Core","ReportService","fs","path","showCoverage","params","req","res","next","options","query","p","reportService","generateReport","getAsset","assetsDir","join","resolve","filename","exists","readFile","err","fileContent","end","addClientCoverage","body","writeHead","clientCoverage","property","hasOwnProperty","mergeCoverageWith","exportFile","_type","type","reportTypes","allowed","indexOf","e","Log","error","stack","importCoverage","instrumentClientJs","fileurl","url","split","shallInstrumentClientScript","pathLabel","setHeader","instrumentJs","data","exportDefault","Handlers"],"mappings":"AAAA,IAAIA,IAAJ;AAASC,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,IAAI,GAACI,CAAL;AAAO;;AAAnB,CAA7B,EAAkD,CAAlD;AAAqD,IAAIC,YAAJ;AAAiBJ,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAsC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,YAAY,GAACD,CAAb;AAAe;;AAA3B,CAAtC,EAAmE,CAAnE;AAAsE,IAAIE,IAAJ;AAASL,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACE,IAAAA,IAAI,GAACF,CAAL;AAAO;;AAAnB,CAA9B,EAAmD,CAAnD;AAAsD,IAAIG,aAAJ;AAAkBN,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAsC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACG,IAAAA,aAAa,GAACH,CAAd;AAAgB;;AAA5B,CAAtC,EAAoE,CAApE;AAAuE,IAAII,EAAJ;AAAOP,MAAM,CAACC,IAAP,CAAY,IAAZ,EAAiB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,IAAAA,EAAE,GAACJ,CAAH;AAAK;;AAAjB,CAAjB,EAAoC,CAApC;AAAuC,IAAIK,IAAJ;AAASR,MAAM,CAACC,IAAP,CAAY,MAAZ,EAAmB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACK,IAAAA,IAAI,GAACL,CAAL;AAAO;;AAAnB,CAAnB,EAAwC,CAAxC;;AAOpWM,YAAY,GAAG,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAC/C,MAAIC,OAAO,GAAG;AACZ,gBAAYJ,MAAM,CAACK,KAAP,CAAaC;AADb,GAAd;AAGA,MAAIC,aAAa,GAAG,IAAIX,aAAJ,EAApB;AACAW,EAAAA,aAAa,CAACC,cAAd,CAA6BN,GAA7B,EAAkC,MAAlC,EAA0CE,OAA1C;AACD,CAND;;AAQAK,QAAQ,GAAG,UAAUT,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAC3C,MAAIO,SAAS,GAAGZ,IAAI,CAACa,IAAL,CAAUb,IAAI,CAACc,OAAL,CAAa,GAAb,CAAV,EAA6B,kDAA7B,CAAhB;AAAA,MACEC,QAAQ,GAAGb,MAAM,CAACa,QADpB;AAEAhB,EAAAA,EAAE,CAACiB,MAAH,CAAUhB,IAAI,CAACa,IAAL,CAAUD,SAAV,EAAqBG,QAArB,CAAV,EAA0C,UAAUC,MAAV,EAAkB;AAC1D,QAAI,CAACA,MAAL,EAAa;AACXjB,MAAAA,EAAE,CAACiB,MAAH,CAAUhB,IAAI,CAACa,IAAL,CAAUD,SAAV,EAAqB,UAArB,EAAiCG,QAAjC,CAAV,EAAsD,UAAUC,MAAV,EAAkB;AACtE;AACA,YAAI,CAACA,MAAL,EAAa,OAAOX,IAAI,EAAX;AACbN,QAAAA,EAAE,CAACkB,QAAH,CAAYL,SAAS,GAAG,UAAZ,GAAyBG,QAArC,EAA+C,UAAUG,GAAV,EAAeC,WAAf,EAA4B;AACzE;AACA,cAAID,GAAJ,EAAS,MAAMA,GAAN;AACTd,UAAAA,GAAG,CAACgB,GAAJ,CAAQD,WAAR;AACD,SAJD;AAKD,OARD;AASD,KAVD,MAUO;AACLpB,MAAAA,EAAE,CAACkB,QAAH,CAAYL,SAAS,GAAG,GAAZ,GAAkBG,QAA9B,EAAwC,UAAUG,GAAV,EAAeC,WAAf,EAA4B;AAClE;AACA,YAAID,GAAJ,EAAS,MAAMA,GAAN;AACTd,QAAAA,GAAG,CAACgB,GAAJ,CAAQD,WAAR;AACD,OAJD;AAKD;AACF,GAlBD;AAmBD,CAtBD;;AAwBAE,iBAAiB,GAAG,UAAUnB,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AACpD,MAAIiB,IAAI,GAAGnB,GAAG,CAACmB,IAAf;AACA;;AACA,MAAI,CAACA,IAAL,EAAW;AACTlB,IAAAA,GAAG,CAACmB,SAAJ,CAAc,GAAd;AACAnB,IAAAA,GAAG,CAACgB,GAAJ;AACD;;AAED,MAAII,cAAJ;;AACA,OAAK,IAAIC,QAAT,IAAqBH,IAArB,EAA2B;AACzB;AACA,QAAIA,IAAI,CAACI,cAAL,CAAoBD,QAApB,CAAJ,EAAmC;AACjCD,MAAAA,cAAc,GAAGF,IAAI,CAACG,QAAD,CAArB;AACD;AACF;;AACD,MAAID,cAAJ,EAAoB;AAClB3B,IAAAA,IAAI,CAAC8B,iBAAL,CAAuBH,cAAvB;AACApB,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,oBAAR;AACD,GAHD,MAGO;AACLhB,IAAAA,GAAG,CAACmB,SAAJ,CAAc,GAAd;AACAnB,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,2BAAR;AACD;AACF,CAtBD;;AAwBAQ,UAAU,GAAG,UAAU1B,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAC7C,MAAIwB,KAAK,GAAG3B,MAAM,CAAC4B,IAAnB;AACA;;AACAA,EAAAA,IAAI,GAAGvC,IAAI,CAACwC,WAAL,CAAiBC,OAAjB,CAAyBC,OAAzB,CAAiCJ,KAAjC,IAA0C,CAAC,CAA3C,GAA+CA,KAA/C,GAAuD,UAA9D;;AACA,MAAI;AACF,QAAIpB,aAAa,GAAG,IAAIX,aAAJ,EAApB;AACAW,IAAAA,aAAa,CAACC,cAAd,CAA6BN,GAA7B,EAAkC0B,IAAlC,EAAwC,EAAxC;AACD,GAHD,CAGE,OAAOI,CAAP,EAAU;AACVC,IAAAA,GAAG,CAACC,KAAJ,CAAU,kBAAV,EAA8BF,CAA9B,EAAiCA,CAAC,CAACG,KAAnC;AACAjC,IAAAA,GAAG,CAACmB,SAAJ,CAAc,GAAd;AACAnB,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,yBAAR;AACD;AACF,CAZD;;AAaAkB,cAAc,GAAG,UAAUpC,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AACjD,MAAI;AACFR,IAAAA,IAAI,CAACyC,cAAL,CAAoBlC,GAApB;AACD,GAFD,CAEE,OAAO8B,CAAP,EAAU;AACVC,IAAAA,GAAG,CAACC,KAAJ,CAAU,kBAAV,EAA8BF,CAA9B,EAAiCA,CAAC,CAACG,KAAnC;AACAjC,IAAAA,GAAG,CAACmB,SAAJ,CAAc,GAAd;AACAnB,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,yBAAR;AACD;AACF,CARD;;AAUAmB,kBAAkB,GAAG,UAAUrC,MAAV,EAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AACrD,MAAImC,OAAO,GAAGrC,GAAG,CAACsC,GAAJ,CAAQC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAd;;AACA,MAAI9C,YAAY,CAAC+C,2BAAb,CAAyCH,OAAzC,CAAJ,EAAuD;AACrD,QAAIxC,IAAJ,EACE4C,SADF,CADqD,CAG/C;;AACN,QAAIzC,GAAG,CAACsC,GAAJ,CAAQR,OAAR,CAAgB,WAAhB,MAAiC,CAArC,EAAwC;AACtCjC,MAAAA,IAAI,GAAG,gBAAP;AACA4C,MAAAA,SAAS,GAAG5C,IAAI,GAAGwC,OAAnB;AACD,KAHD,MAGO,IAAIrC,GAAG,CAACsC,GAAJ,CAAQR,OAAR,CAAgB,MAAhB,MAA4B,CAAhC,EAAmC;AAChC;AACRjC,MAAAA,IAAI,GAAG,gBAAP;AACA4C,MAAAA,SAAS,GAAG5C,IAAI,GAAGwC,OAAnB;AACD,KAJM,MAIA;AACG;AACRxC,MAAAA,IAAI,GAAG,oBAAP;AACA4C,MAAAA,SAAS,GAAG5C,IAAI,GAAGwC,OAAnB;AACD;;AACDpC,IAAAA,GAAG,CAACyC,SAAJ,CAAc,cAAd,EAA8B,wBAA9B;AACA9C,IAAAA,EAAE,CAACiB,MAAH,CAAUhB,IAAI,GAAGwC,OAAjB,EAA0B,UAAUxB,MAAV,EAAkB;AAC1C;AACA,UAAI,CAACA,MAAL,EAAa,OAAOX,IAAI,EAAX;AACbN,MAAAA,EAAE,CAACkB,QAAH,CAAYjB,IAAI,GAAGwC,OAAnB,EAA4B,MAA5B,EAAoC,UAAUtB,GAAV,EAAeC,WAAf,EAA4B;AAC9D;AACA,YAAID,GAAJ,EAAS,OAAOb,IAAI,EAAX;AACTT,QAAAA,YAAY,CAACkD,YAAb,CAA0B3B,WAA1B,EAAuCyB,SAAvC,EAAkD,UAAU1B,GAAV,EAAe6B,IAAf,EAAqB;AACrE;AACA,cAAI7B,GAAJ,EAAS,MAAMA,GAAN;AACTd,UAAAA,GAAG,CAACgB,GAAJ,CAAQ2B,IAAR;AACD,SAJD;AAKD,OARD;AASD,KAZD;AAaD,GA9BD,MA8BO;AACL1C,IAAAA,IAAI;AACL;AACF,CAnCD;;AAtFAb,MAAM,CAACwD,aAAP,CA2HeC,QAAQ,GAAG;AACxBhD,EAAAA,YADwB;AAExBU,EAAAA,QAFwB;AAGxBU,EAAAA,iBAHwB;AAIxBkB,EAAAA,kBAJwB;AAKxBX,EAAAA,UALwB;AAMxBU,EAAAA;AANwB,CA3H1B","sourcesContent":["import Conf from './context/conf';\r\nimport Instrumenter from './services/instrumenter';\r\nimport Core from './services/core';\r\nimport ReportService from './report/report-service';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nshowCoverage = function (params, req, res, next) {\r\n  let options = {\r\n    'filepath': params.query.p\r\n  };\r\n  let reportService = new ReportService();\r\n  reportService.generateReport(res, 'http', options);\r\n};\r\n\r\ngetAsset = function (params, req, res, next) {\r\n  var assetsDir = path.join(path.resolve('.'), 'assets/packages/lmieulet_meteor-coverage/assets/'),\r\n    filename = params.filename;\r\n  fs.exists(path.join(assetsDir, filename), function (exists) {\r\n    if (!exists) {\r\n      fs.exists(path.join(assetsDir, '/vendor/', filename), function (exists) {\r\n        /* istanbul ignore else */\r\n        if (!exists) return next();\r\n        fs.readFile(assetsDir + '/vendor/' + filename, function (err, fileContent) {\r\n          /* istanbul ignore else */\r\n          if (err) throw err;\r\n          res.end(fileContent);\r\n        });\r\n      });\r\n    } else {\r\n      fs.readFile(assetsDir + '/' + filename, function (err, fileContent) {\r\n        /* istanbul ignore else */\r\n        if (err) throw err;\r\n        res.end(fileContent);\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\naddClientCoverage = function (params, req, res, next) {\r\n  var body = req.body;\r\n  /* istanbul ignore else */\r\n  if (!body) {\r\n    res.writeHead(400);\r\n    res.end();\r\n  }\r\n\r\n  var clientCoverage;\r\n  for (var property in body) {\r\n    /* istanbul ignore else */\r\n    if (body.hasOwnProperty(property)) {\r\n      clientCoverage = body[property];\r\n    }\r\n  }\r\n  if (clientCoverage) {\r\n    Core.mergeCoverageWith(clientCoverage);\r\n    res.end('{\"type\":\"success\"}');\r\n  } else {\r\n    res.writeHead(400);\r\n    res.end('Nothing has been imported');\r\n  }\r\n};\r\n\r\nexportFile = function (params, req, res, next) {\r\n  var _type = params.type;\r\n  /* istanbul ignore next: ternary operator */\r\n  type = Conf.reportTypes.allowed.indexOf(_type) > -1 ? _type : 'coverage';\r\n  try {\r\n    let reportService = new ReportService();\r\n    reportService.generateReport(res, type, {});\r\n  } catch (e) {\r\n    Log.error('Failed to export', e, e.stack);\r\n    res.writeHead(400);\r\n    res.end('Nothing has been export');\r\n  }\r\n};\r\nimportCoverage = function (params, req, res, next) {\r\n  try {\r\n    Core.importCoverage(res);\r\n  } catch (e) {\r\n    Log.error('Failed to import', e, e.stack);\r\n    res.writeHead(400);\r\n    res.end('No file has been import');\r\n  }\r\n};\r\n\r\ninstrumentClientJs = function (params, req, res, next) {\r\n  var fileurl = req.url.split('?')[0];\r\n  if (Instrumenter.shallInstrumentClientScript(fileurl)) {\r\n    var path,\r\n      pathLabel;\r\n          // Either a package\r\n    if (req.url.indexOf('/packages') === 0) {\r\n      path = '../web.browser';\r\n      pathLabel = path + fileurl;\r\n    } else if (req.url.indexOf('/app') === 0) {\r\n              // Or the app/app.js\r\n      path = '../web.browser';\r\n      pathLabel = path + fileurl;\r\n    } else {\r\n              // Or a public file\r\n      path = '../web.browser/app';\r\n      pathLabel = path + fileurl;\r\n    }\r\n    res.setHeader('Content-type', 'application/javascript');\r\n    fs.exists(path + fileurl, function (exists) {\r\n      /* istanbul ignore else */\r\n      if (!exists) return next();\r\n      fs.readFile(path + fileurl, 'utf8', function (err, fileContent) {\r\n        /* istanbul ignore else */\r\n        if (err) return next();\r\n        Instrumenter.instrumentJs(fileContent, pathLabel, function (err, data) {\r\n          /* istanbul ignore else */\r\n          if (err) throw err;\r\n          res.end(data);\r\n        });\r\n      });\r\n    });\r\n  } else {\r\n    next();\r\n  }\r\n};\r\n\r\nexport default Handlers = {\r\n  showCoverage,\r\n  getAsset,\r\n  addClientCoverage,\r\n  instrumentClientJs,\r\n  exportFile,\r\n  importCoverage\r\n};\r\n"]},"sourceType":"script","hash":"5ebff7105dbc7d912b7bfa2188aaddea5f72ddc0"}
