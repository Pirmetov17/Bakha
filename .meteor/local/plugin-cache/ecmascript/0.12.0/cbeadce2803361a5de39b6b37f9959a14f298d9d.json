{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/admin/simple-todos/imports/api/tasks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/api/tasks.js","filename":"/Users/admin/simple-todos/imports/api/tasks.js","passPerPreset":false,"envName":"development","cwd":"/Users/admin/simple-todos","root":"/Users/admin/simple-todos","generatorOpts":{"filename":"/Users/admin/simple-todos/imports/api/tasks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/tasks.js"}},"code":"module.export({\n  Tasks: function () {\n    return Tasks;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function () {\n    function tasksPublication() {\n      return Tasks.find({\n        $or: [{\n          \"private\": {\n            $ne: true\n          }\n        }, {\n          owner: this.userId\n        }]\n      });\n    }\n\n    return tasksPublication;\n  }());\n}\n\nMeteor.methods({\n  'tasks.insert': function (text) {\n    check(text, String); // Make sure the user is logged in before inserting a task\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username\n    });\n  },\n  'tasks.remove': function (taskId) {\n    check(taskId, String);\n    var task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked': function (taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n    var task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        checked: setChecked\n      }\n    });\n  },\n  'tasks.setPrivate': function (taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n    var task = Tasks.findOne(taskId); // Make sure only the task owner can make a task private\n\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        \"private\": setToPrivate\n      }\n    });\n  }\n});","map":{"version":3,"sources":["imports/api/tasks.js"],"names":["module","export","Tasks","Meteor","link","v","Mongo","check","Collection","isServer","publish","tasksPublication","find","$or","$ne","owner","userId","methods","text","String","Error","insert","createdAt","Date","username","users","findOne","taskId","task","private","remove","setChecked","Boolean","update","$set","checked","setToPrivate"],"mappings":"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","sourcesContent":["\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [\n        { private: { $ne: true } },\n        { owner: this.userId },\n      ],\n    });\n  });\n}\n\nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n\n    // Make sure the user is logged in before inserting a task\n    if (! this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username,\n    });\n  },\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n\n    const task = Tasks.findOne(taskId);\n\n    // Make sure only the task owner can make a task private\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { private: setToPrivate } });\n  },\n});\n"]},"sourceType":"script","hash":"cbeadce2803361a5de39b6b37f9959a14f298d9d"}
