{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/admin/simple-todos/imports/ui/App.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/ui/App.js","filename":"/Users/admin/simple-todos/imports/ui/App.js","passPerPreset":false,"envName":"development","cwd":"/Users/admin/simple-todos","root":"/Users/admin/simple-todos","generatorOpts":{"filename":"/Users/admin/simple-todos/imports/ui/App.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/App.js"}},"code":"let React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      // current time\n      owner: Meteor.userId(),\n      // _id of logged in user\n      username: Meteor.user().username // username of logged in user\n\n    }); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => React.createElement(Task, {\n      key: task._id,\n      task: task\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    }))), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count()\n  };\n})(App));","map":{"version":3,"sources":["imports/ui/App.js"],"names":["React","Component","module","link","default","v","ReactDOM","Meteor","withTracker","Tasks","Task","AccountsUIWrapper","App","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","text","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","owner","userId","username","user","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","_id","render","incompleteCount","bind","exportDefault","find","sort","fetch","$ne","count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(), // current time\n      owner: Meteor.userId(),           // _id of logged in user\n      username: Meteor.user().username,  // username of logged in user\n    });\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n            <input\n              type=\"text\"\n              ref=\"textInput\"\n              placeholder=\"Type to add new tasks\"\n            />\n          </form>\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n  };\n})(App);\n"]},"sourceType":"script","hash":"e982c411339d4f618330c295fc81731ec00e6495"}
