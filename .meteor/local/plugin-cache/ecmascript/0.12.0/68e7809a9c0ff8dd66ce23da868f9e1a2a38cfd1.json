{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/services/core.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/services/core.js","filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/services/core.js","passPerPreset":false,"envName":"development","cwd":"/Users/admin/simple-todos","root":"/Users/admin/simple-todos","presets":[],"generatorOpts":{"filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/services/core.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/services/core.js"}},"code":"let Conf;\nmodule.link(\"./../context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 0);\nlet path;\nmodule.link(\"path\", {\n  default(v) {\n    path = v;\n  }\n\n}, 1);\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 2);\n\nconst istanbulAPI = Npm.require('istanbul-api');\n\nconst Coverage = istanbulAPI.libCoverage;\nlet mergeCoverageWith, importCoverage, getCoverageObject;\n\ngetCoverageObject = function () {\n  /* istanbul ignore next: default assignment */\n  global.__coverage__ = global.__coverage__ || {};\n  return global.__coverage__;\n};\n\nsetCoverageObject = function (obj) {\n  global.__coverage__ = obj;\n};\n\nmergeCoverageWith = function (obj) {\n  /* istanbul ignore else */\n  if (!obj) {\n    return;\n  }\n\n  var coverage = getCoverageObject();\n  var coverageMap = Coverage.createCoverageMap(coverage);\n  coverageMap.addFileCoverage(obj);\n  setCoverageObject(coverageMap.toJSON());\n};\n/* istanbul ignore next: default assignment */\n\n\nimportCoverage = function (res, options = {}) {\n  Log.info('import coverage');\n  /* istanbul ignore next: ternary operator */\n\n  const filename = options.filename ? options.filename : 'report.json';\n  const reportPath = path.join(Conf.COVERAGE_APP_FOLDER, Conf.COVERAGE_EXPORT_FOLDER, filename);\n  fs.exists(reportPath, function (exists) {\n    /* istanbul ignore else */\n    if (!exists) {\n      throw 'report file not found: reportPath=' + reportPath + ' COVERAGE_APP_FOLDER=' + Conf.COVERAGE_APP_FOLDER;\n    }\n\n    fs.readFile(reportPath, 'utf8', function (err, fileContent) {\n      /* istanbul ignore else */\n      if (err) {\n        throw 'failed to read report file: ' + reportPath;\n      }\n\n      let coverageObj = JSON.parse(fileContent);\n\n      for (let property in coverageObj) {\n        /* istanbul ignore else */\n        if (coverageObj.hasOwnProperty(property)) {\n          Core.mergeCoverageWith(coverageObj[property]);\n        }\n      }\n\n      res.end('{\"type\":\"success\"}');\n    });\n  });\n};\n\nmodule.exportDefault(Core = {\n  mergeCoverageWith,\n  importCoverage,\n  getCoverageObject\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/services/core.js"],"names":["Conf","module","link","default","v","path","fs","istanbulAPI","Npm","require","Coverage","libCoverage","mergeCoverageWith","importCoverage","getCoverageObject","global","__coverage__","setCoverageObject","obj","coverage","coverageMap","createCoverageMap","addFileCoverage","toJSON","res","options","Log","info","filename","reportPath","join","COVERAGE_APP_FOLDER","COVERAGE_EXPORT_FOLDER","exists","readFile","err","fileContent","coverageObj","JSON","parse","property","hasOwnProperty","Core","end","exportDefault"],"mappings":"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","sourcesContent":["import Conf from './../context/conf';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nconst istanbulAPI = Npm.require('istanbul-api');\r\nconst Coverage = istanbulAPI.libCoverage;\r\n\r\nlet mergeCoverageWith, importCoverage, getCoverageObject;\r\n\r\ngetCoverageObject = function () {\r\n  /* istanbul ignore next: default assignment */\r\n  global.__coverage__ = global.__coverage__ || {};\r\n  return global.__coverage__;\r\n};\r\n\r\nsetCoverageObject = function (obj) {\r\n  global.__coverage__ = obj;\r\n};\r\n\r\nmergeCoverageWith = function (obj) {\r\n  /* istanbul ignore else */\r\n  if (!obj) {\r\n    return;\r\n  }\r\n  var coverage = getCoverageObject();\r\n  var coverageMap = Coverage.createCoverageMap(coverage);\r\n  coverageMap.addFileCoverage(obj);\r\n  setCoverageObject(coverageMap.toJSON());\r\n};\r\n\r\n\r\n/* istanbul ignore next: default assignment */\r\nimportCoverage = function (res, options = {}) {\r\n  Log.info('import coverage');\r\n  /* istanbul ignore next: ternary operator */\r\n  const filename = options.filename ? options.filename : 'report.json';\r\n  const reportPath = path.join(Conf.COVERAGE_APP_FOLDER, Conf.COVERAGE_EXPORT_FOLDER, filename);\r\n  fs.exists(reportPath, function (exists) {\r\n    /* istanbul ignore else */\r\n    if (!exists) {\r\n      throw 'report file not found: reportPath=' + reportPath + ' COVERAGE_APP_FOLDER=' + Conf.COVERAGE_APP_FOLDER;\r\n    }\r\n    fs.readFile(reportPath, 'utf8', function (err, fileContent) {\r\n      /* istanbul ignore else */\r\n      if (err) {\r\n        throw 'failed to read report file: ' + reportPath;\r\n      }\r\n      let coverageObj = JSON.parse(fileContent);\r\n      for (let property in coverageObj) {\r\n        /* istanbul ignore else */\r\n        if (coverageObj.hasOwnProperty(property)) {\r\n          Core.mergeCoverageWith(coverageObj[property]);\r\n        }\r\n      }\r\n      res.end('{\"type\":\"success\"}');\r\n    });\r\n  });\r\n};\r\nexport default Core = {\r\n  mergeCoverageWith,\r\n  importCoverage,\r\n  getCoverageObject\r\n};\r\n"]},"sourceType":"script","hash":"68e7809a9c0ff8dd66ce23da868f9e1a2a38cfd1"}
