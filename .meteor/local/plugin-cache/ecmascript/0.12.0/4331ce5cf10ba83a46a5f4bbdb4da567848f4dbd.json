{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/client/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/lmieulet:meteor-coverage/client/methods.js","filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/client/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/admin/simple-todos","root":"/Users/admin/simple-todos","generatorOpts":{"filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/client/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/client/methods.js"}},"code":"let $;\nmodule.link(\"meteor/jquery\", {\n  $(v) {\n    $ = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nvar stats = {\n  SUCCESS: 0,\n  FAILED: 0,\n  TOTAL: 0\n};\n\nMeteor.getStats = function () {\n  return stats;\n};\n\nMeteor.increaseSuccess = function () {\n  stats.SUCCESS++;\n};\n\nMeteor.increaseFailures = function () {\n  stats.FAILED++;\n};\n\nMeteor.increaseTotal = function () {\n  stats.TOTAL++;\n};\n\nMeteor.getCoverageObject = function () {\n  return global['__coverage__'];\n};\n\nMeteor.getCoverageReportObject = function (propertyKey, value) {\n  var coverageReport = {};\n  coverageReport[propertyKey] = value;\n  return JSON.stringify(coverageReport);\n};\n/**\r\n* Usage: Meteor.sendCoverage(function(stats,err) {console.log(stats,err);});\r\n*/\n\n\nMeteor.sendCoverage = function (callback) {\n  var coverageReport = {},\n      successCallback = function () {\n    Meteor.increaseSuccess();\n    var stats = Meteor.getStats();\n    /* istanbul ignore else */\n\n    if (stats.SUCCESS + stats.FAILED === stats.TOTAL) {\n      callback(stats);\n    }\n  },\n      errorCallback = function () {\n    Meteor.increaseFailures();\n    var stats = Meteor.getStats();\n    /* istanbul ignore else */\n\n    if (stats.SUCCESS + stats.FAILED === stats.TOTAL) {\n      callback(stats, arguments);\n    }\n  };\n\n  var globalCoverage = Meteor.getCoverageObject();\n\n  if (!globalCoverage) {\n    return callback(Meteor.getStats());\n  } // Send each property alone\n\n\n  for (var property in globalCoverage) {\n    /* istanbul ignore else */\n    if (globalCoverage.hasOwnProperty(property)) {\n      Meteor.increaseTotal();\n      $.ajax({\n        method: 'POST',\n        url: '/coverage/client',\n        data: Meteor.getCoverageReportObject(property, globalCoverage[property]),\n        contentType: 'application/json; charset=UTF-8',\n        processData: false,\n        success: successCallback,\n        error: errorCallback\n      });\n    }\n  }\n};\n/**\r\n* Usage: Meteor.exportCoverage(null, function(err) {console.log(err)})\r\n*/\n\n\nMeteor.exportCoverage = function (type, callback) {\n  /* istanbul ignore next: ternary operator */\n  var url = type ? '/coverage/export/' + type : '/coverage/export';\n  $.ajax({\n    method: 'GET',\n    url: url,\n    success: function (data) {\n      try {\n        let result = JSON.parse(data);\n        /* istanbul ignore else */\n\n        if (result.type !== 'success') {\n          throw new Error('Error: ' + JSON.stringify(arguments) + '. An unexpected error occurred while trying to export coverage data');\n        }\n\n        return callback();\n      } catch (e) {\n        return callback(e);\n      }\n    },\n    error: function () {\n      callback('Error: ' + JSON.stringify(arguments) + '. A server error occurred while trying to export coverage data');\n    }\n  });\n};\n/**\r\n* Usage: Meteor.importCoverage(function(err) {console.log(err)})\r\n*/\n\n\nMeteor.importCoverage = function (callback) {\n  $.ajax({\n    method: 'GET',\n    url: '/coverage/import',\n    success: function (data) {\n      try {\n        let result = JSON.parse(data);\n        /* istanbul ignore else */\n\n        if (result.type !== 'success') {\n          throw new Error('Error: ' + JSON.stringify(arguments) + '. An unexpected error occurred while trying to import coverage data');\n        }\n\n        return callback();\n      } catch (e) {\n        callback(e, arguments);\n      }\n    },\n    error: function () {\n      callback(e, arguments);\n    }\n  });\n};\n\nmodule.exportDefault(Meteor);","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/client/methods.js"],"names":["$","module","link","v","Meteor","stats","SUCCESS","FAILED","TOTAL","getStats","increaseSuccess","increaseFailures","increaseTotal","getCoverageObject","global","getCoverageReportObject","propertyKey","value","coverageReport","JSON","stringify","sendCoverage","callback","successCallback","errorCallback","arguments","globalCoverage","property","hasOwnProperty","ajax","method","url","data","contentType","processData","success","error","exportCoverage","type","result","parse","Error","e","importCoverage","exportDefault"],"mappings":"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","sourcesContent":["import { $ } from 'meteor/jquery';\r\nimport { Meteor } from 'meteor/meteor';\r\n\r\nvar stats = {SUCCESS: 0, FAILED: 0, TOTAL: 0};\r\nMeteor.getStats = function () {\r\n  return stats;\r\n};\r\n\r\nMeteor.increaseSuccess = function () {\r\n  stats.SUCCESS++;\r\n};\r\n\r\nMeteor.increaseFailures = function () {\r\n  stats.FAILED++;\r\n};\r\n\r\nMeteor.increaseTotal = function () {\r\n  stats.TOTAL++;\r\n};\r\n\r\nMeteor.getCoverageObject = function () {\r\n  return global['__coverage__'];\r\n};\r\n\r\nMeteor.getCoverageReportObject = function (propertyKey, value) {\r\n  var coverageReport = {};\r\n  coverageReport[propertyKey] = value;\r\n\r\n  return JSON.stringify(coverageReport);\r\n};\r\n\r\n/**\r\n* Usage: Meteor.sendCoverage(function(stats,err) {console.log(stats,err);});\r\n*/\r\nMeteor.sendCoverage = function (callback) {\r\n  var coverageReport = {},\r\n    successCallback = function () {\r\n      Meteor.increaseSuccess();\r\n      var stats = Meteor.getStats();\r\n      /* istanbul ignore else */\r\n      if (stats.SUCCESS + stats.FAILED === stats.TOTAL) {\r\n        callback(stats);\r\n      }\r\n    },\r\n    errorCallback = function() {\r\n      Meteor.increaseFailures();\r\n      var stats = Meteor.getStats();\r\n      /* istanbul ignore else */\r\n      if (stats.SUCCESS + stats.FAILED === stats.TOTAL) {\r\n        callback(stats, arguments);\r\n      }\r\n    };\r\n\r\n  var globalCoverage = Meteor.getCoverageObject();\r\n  if (!globalCoverage) {\r\n    return callback(Meteor.getStats());\r\n  }\r\n\r\n    // Send each property alone\r\n  for (var property in globalCoverage) {\r\n    /* istanbul ignore else */\r\n    if (globalCoverage.hasOwnProperty(property)) {\r\n      Meteor.increaseTotal();\r\n\r\n      $.ajax({\r\n        method: 'POST',\r\n        url: '/coverage/client',\r\n        data: Meteor.getCoverageReportObject(property, globalCoverage[property]),\r\n        contentType: 'application/json; charset=UTF-8',\r\n        processData: false,\r\n        success: successCallback,\r\n        error: errorCallback\r\n      });\r\n    }\r\n  }\r\n};\r\n/**\r\n* Usage: Meteor.exportCoverage(null, function(err) {console.log(err)})\r\n*/\r\nMeteor.exportCoverage = function (type, callback) {\r\n  /* istanbul ignore next: ternary operator */\r\n  var url = type ? '/coverage/export/'+type : '/coverage/export';\r\n  $.ajax({\r\n    method: 'GET',\r\n    url: url,\r\n    success: function(data) {\r\n      try {\r\n        let result = JSON.parse(data);\r\n        /* istanbul ignore else */\r\n        if (result.type !== 'success') {\r\n          throw new Error('Error: '+JSON.stringify(arguments)+'. An unexpected error occurred while trying to export coverage data');\r\n        }\r\n\r\n        return callback();\r\n      } catch (e) {\r\n        return callback(e);\r\n      }\r\n    },\r\n    error: function() {\r\n      callback('Error: '+JSON.stringify(arguments)+'. A server error occurred while trying to export coverage data');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n* Usage: Meteor.importCoverage(function(err) {console.log(err)})\r\n*/\r\nMeteor.importCoverage = function (callback) {\r\n  $.ajax({\r\n    method: 'GET',\r\n    url: '/coverage/import',\r\n    success: function(data) {\r\n      try {\r\n        let result = JSON.parse(data);\r\n        /* istanbul ignore else */\r\n        if (result.type !== 'success') {\r\n          throw new Error('Error: '+JSON.stringify(arguments)+'. An unexpected error occurred while trying to import coverage data');\r\n        }\r\n\r\n        return callback();\r\n      } catch (e) {\r\n        callback(e, arguments);\r\n      }\r\n    },\r\n    error: function() {\r\n      callback(e, arguments);\r\n    }\r\n  });\r\n};\r\n\r\nexport default Meteor;\r\n"]},"sourceType":"script","hash":"4331ce5cf10ba83a46a5f4bbdb4da567848f4dbd"}
