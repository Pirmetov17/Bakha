{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/services/instrumenter.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/lmieulet:meteor-coverage/server/services/instrumenter.js","filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/services/instrumenter.js","passPerPreset":false,"envName":"development","cwd":"/Users/admin/simple-todos","root":"/Users/admin/simple-todos","presets":[],"generatorOpts":{"filename":"/Users/admin/simple-todos/packages/lmieulet:meteor-coverage/server/services/instrumenter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/lmieulet:meteor-coverage/server/services/instrumenter.js"}},"code":"let _;\n\nmodule.link(\"meteor/underscore\", {\n  _(v) {\n    _ = v;\n  }\n\n}, 0);\nlet Log;\nmodule.link(\"./../context/log\", {\n  default(v) {\n    Log = v;\n  }\n\n}, 1);\nlet Conf;\nmodule.link(\"./../context/conf\", {\n  default(v) {\n    Conf = v;\n  }\n\n}, 2);\nlet minimatch;\nmodule.link(\"minimatch\", {\n  default(v) {\n    minimatch = v;\n  }\n\n}, 3);\n\nconst istanbulAPI = Npm.require('istanbul-api');\n\nconst Instrument = istanbulAPI.libInstrument;\nconst Hook = istanbulAPI.libHook;\nlet instrumenter = undefined;\n/**\r\n * hooks `runInThisContext` to add instrumentation to matching files when they are loaded on the server\r\n * @method hookLoader\r\n * @param {Object} opts instrumenter options\r\n */\n\nhookLoader = function (opts) {\n  /* istanbul ignore next: default assignment */\n  opts = opts || {};\n  opts.verbose = true;\n  opts.coverageVariable = '__coverage__'; // force this always\n\n  /* istanbul ignore else */\n\n  if (instrumenter !== undefined) {\n    throw 'Instrumenter already defined ! You cannot call this method twice';\n  }\n\n  instrumenter = Instrument.createInstrumenter(opts);\n  const transformer = instrumenter.instrumentSync.bind(instrumenter);\n  Hook.hookRunInThisContext(shallInstrumentServerScript, transformer, {\n    verbose: opts.verbose\n  });\n};\n\ninstrumentJs = function (content, path, callback) {\n  SourceMap.registerSourceMap(path);\n  return instrumenter.instrument(content, path, callback);\n};\n\nfileMatch = function (filePath, pattern) {\n  return minimatch(filePath, pattern, {\n    dot: true\n  });\n};\n\nshouldIgnore = function (filePath, isAServerSideFile) {\n  // Force the inclusion of any file using config file\n\n  /* istanbul ignore else */\n  if (Conf.include) {\n    /* istanbul ignore else */\n    if (Conf.include.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\n      Log.info('[Accepted][include]: ', filePath);\n      return false;\n    }\n  }\n  /* istanbul ignore else */\n\n\n  if (Conf.exclude.general) {\n    /* istanbul ignore else */\n    if (Conf.exclude.general.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\n      Log.info('[Ignored][exclude.general]: ', filePath);\n      return true;\n    }\n  }\n  /* istanbul ignore else */\n\n\n  if (Conf.exclude.server && isAServerSideFile) {\n    /* istanbul ignore else */\n    if (Conf.exclude.server.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\n      Log.info('[Ignored][exclude.server]: ', filePath);\n      return true;\n    }\n  }\n  /* istanbul ignore else */\n\n\n  if (Conf.exclude.client && !isAServerSideFile) {\n    /* istanbul ignore else */\n    if (Conf.exclude.client.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\n      Log.info('[Ignored][exclude.client]: ', filePath);\n      return true;\n    }\n  }\n\n  Log.info('[Accepted][*]: ', filePath);\n  return false;\n};\n\nshallInstrumentClientScript = function (fileurl) {\n  /* istanbul ignore else */\n  if (fileurl.indexOf('.js') > -1) {\n    /* istanbul ignore else */\n    if (!Instrumenter.shouldIgnore(fileurl, false)) {\n      Log.info('[ClientSide][Public] file instrumented: ' + fileurl);\n      return true;\n    }\n\n    Log.info('[ClientSide][Public] file ignored: ' + fileurl);\n    return false;\n  }\n\n  return false;\n};\n/**\r\n *\r\n * a match function with signature `fn(file)` that returns true if `file` needs to be instrumented\r\n * if the result is true, it also reads the corresponding source map\r\n * @returns {Function}\r\n */\n\n\nshallInstrumentServerScript = function (file) {\n  var root = __meteor_bootstrap__.serverDir;\n  /* istanbul ignore else */\n\n  if (file.indexOf(root) !== 0) {\n    Log.info('[ServerSide][OutsideApp] file ignored: ' + file);\n    return false;\n  }\n\n  file = file.substring(root.length);\n  /* istanbul ignore else */\n\n  if (file.indexOf('node_modules') >= 0) {\n    Log.info('[ServerSide][node_modules] file ignored: ' + file);\n    return false;\n  }\n\n  if (file.indexOf('packages') === 1) {\n    /* istanbul ignore else */\n    if (!Instrumenter.shouldIgnore(file, true)) {\n      SourceMap.registerSourceMap(root + file);\n      return true;\n    }\n  } else {\n    /* istanbul ignore else */\n    if (!Instrumenter.shouldIgnore(root + file, true)) {\n      SourceMap.registerSourceMap(root + file);\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exportDefault(Instrumenter = {\n  hookLoader,\n  instrumentJs,\n  shouldIgnore,\n  fileMatch,\n  shallInstrumentClientScript,\n  shallInstrumentServerScript\n});","map":{"version":3,"sources":["packages/lmieulet:meteor-coverage/server/services/instrumenter.js"],"names":["_","module","link","v","Log","default","Conf","minimatch","istanbulAPI","Npm","require","Instrument","libInstrument","Hook","libHook","instrumenter","undefined","hookLoader","opts","verbose","coverageVariable","createInstrumenter","transformer","instrumentSync","bind","hookRunInThisContext","shallInstrumentServerScript","instrumentJs","content","path","callback","SourceMap","registerSourceMap","instrument","fileMatch","filePath","pattern","dot","shouldIgnore","isAServerSideFile","include","some","Instrumenter","info","exclude","general","server","client","shallInstrumentClientScript","fileurl","indexOf","file","root","__meteor_bootstrap__","serverDir","substring","length","exportDefault"],"mappings":"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","sourcesContent":["import {_} from 'meteor/underscore';\r\nimport Log from './../context/log';\r\nimport Conf from './../context/conf';\r\nimport minimatch from 'minimatch';\r\n\r\nconst istanbulAPI = Npm.require('istanbul-api');\r\nconst Instrument = istanbulAPI.libInstrument;\r\nconst Hook = istanbulAPI.libHook;\r\n\r\nlet instrumenter = undefined;\r\n\r\n/**\r\n * hooks `runInThisContext` to add instrumentation to matching files when they are loaded on the server\r\n * @method hookLoader\r\n * @param {Object} opts instrumenter options\r\n */\r\nhookLoader = function (opts) {\r\n  /* istanbul ignore next: default assignment */\r\n  opts = opts || {};\r\n  opts.verbose = true;\r\n  opts.coverageVariable = '__coverage__'; // force this always\r\n\r\n  /* istanbul ignore else */\r\n  if (instrumenter !== undefined) {\r\n    throw 'Instrumenter already defined ! You cannot call this method twice';\r\n  }\r\n  instrumenter = Instrument.createInstrumenter(opts);\r\n  const transformer = instrumenter.instrumentSync.bind(instrumenter);\r\n  Hook.hookRunInThisContext(\r\n    shallInstrumentServerScript,\r\n    transformer,\r\n    {\r\n      verbose: opts.verbose\r\n    }\r\n  );\r\n};\r\n\r\ninstrumentJs = function (content, path, callback) {\r\n  SourceMap.registerSourceMap(path);\r\n  return instrumenter.instrument(content, path, callback);\r\n};\r\n\r\nfileMatch = function (filePath, pattern) {\r\n  return minimatch(filePath, pattern, {dot: true});\r\n};\r\nshouldIgnore = function (filePath, isAServerSideFile) {\r\n  // Force the inclusion of any file using config file\r\n  /* istanbul ignore else */\r\n  if (Conf.include) {\r\n    /* istanbul ignore else */\r\n    if (Conf.include.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\r\n      Log.info('[Accepted][include]: ', filePath);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (Conf.exclude.general) {\r\n    /* istanbul ignore else */\r\n    if (Conf.exclude.general.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\r\n      Log.info('[Ignored][exclude.general]: ', filePath);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (Conf.exclude.server && isAServerSideFile) {\r\n    /* istanbul ignore else */\r\n    if (Conf.exclude.server.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\r\n      Log.info('[Ignored][exclude.server]: ', filePath);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /* istanbul ignore else */\r\n  if (Conf.exclude.client && !isAServerSideFile) {\r\n    /* istanbul ignore else */\r\n    if (Conf.exclude.client.some(pattern => Instrumenter.fileMatch(filePath, pattern))) {\r\n      Log.info('[Ignored][exclude.client]: ', filePath);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  Log.info('[Accepted][*]: ', filePath);\r\n  return false;\r\n};\r\n\r\nshallInstrumentClientScript = function (fileurl) {\r\n  /* istanbul ignore else */\r\n  if (fileurl.indexOf('.js') > -1) {\r\n    /* istanbul ignore else */\r\n    if (!Instrumenter.shouldIgnore(fileurl, false)) {\r\n      Log.info('[ClientSide][Public] file instrumented: ' + fileurl);\r\n      return true;\r\n    }\r\n    Log.info('[ClientSide][Public] file ignored: ' + fileurl);\r\n    return false;\r\n  }\r\n  return false;\r\n};\r\n\r\n\r\n/**\r\n *\r\n * a match function with signature `fn(file)` that returns true if `file` needs to be instrumented\r\n * if the result is true, it also reads the corresponding source map\r\n * @returns {Function}\r\n */\r\nshallInstrumentServerScript = function (file) {\r\n  var root = __meteor_bootstrap__.serverDir;\r\n  /* istanbul ignore else */\r\n  if (file.indexOf(root) !== 0) {\r\n    Log.info('[ServerSide][OutsideApp] file ignored: ' + file);\r\n    return false;\r\n  }\r\n  file = file.substring(root.length);\r\n  /* istanbul ignore else */\r\n  if (file.indexOf('node_modules') >= 0) {\r\n    Log.info('[ServerSide][node_modules] file ignored: ' + file);\r\n    return false;\r\n  }\r\n  if (file.indexOf('packages') === 1) {\r\n    /* istanbul ignore else */\r\n    if (!Instrumenter.shouldIgnore(file, true)) {\r\n      SourceMap.registerSourceMap(root + file);\r\n      return true;\r\n    }\r\n  } else {\r\n    /* istanbul ignore else */\r\n    if (!Instrumenter.shouldIgnore(root + file, true)) {\r\n      SourceMap.registerSourceMap(root + file);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport default Instrumenter = {\r\n  hookLoader,\r\n  instrumentJs,\r\n  shouldIgnore,\r\n  fileMatch,\r\n  shallInstrumentClientScript,\r\n  shallInstrumentServerScript\r\n};\r\n"]},"sourceType":"script","hash":"dbfa40d32a51d7ad88ab7e61cfd5f22501f59e35"}
