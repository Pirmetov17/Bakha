[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/main.html                                                                                          //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.main.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/template.main.js                                                                                   //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/main.js                                                                                            //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nmodule.link(\"../client/main.html\");\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/api/tasks.js                                                                                      //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Tasks = new Mongo.Collection('tasks');\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/startup/accounts-config.js                                                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/App.js                                                                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 3);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 4);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 5);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Tasks.insert({\n      text,\n      createdAt: new Date() // current time\n\n    }); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => React.createElement(Task, {\n      key: task._id,\n      task: task\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    }))), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count()\n  };\n})(App));\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Task.js                                                                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  default: () => Task\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 1);\n\nclass Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Tasks.update(this.props.task._id, {\n      $set: {\n        checked: !this.props.task.checked\n      }\n    });\n  }\n\n  deleteThisTask() {\n    Tasks.remove(this.props.task._id);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = this.props.task.checked ? 'checked' : '';\n    return React.createElement(\"li\", {\n      className: taskClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisTask.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.task.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), React.createElement(\"span\", {\n      className: \"text\"\n    }, React.createElement(\"strong\", null, this.props.task.username), \": \", this.props.task.text));\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.js","imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/App.js","imports/ui/Task.js"],"names":["React","module","link","default","v","Meteor","render","App","startup","document","getElementById","export","Tasks","Mongo","Collection","Accounts","ui","config","passwordSignupFields","Component","ReactDOM","withTracker","Task","AccountsUIWrapper","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","text","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","_id","incompleteCount","bind","exportDefault","find","sort","fetch","$ne","count","toggleChecked","update","$set","deleteThisTask","remove","taskClassName","username"],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\n\n import '../imports/startup/accounts-config.js';\n import App from '../imports/ui/App.js';\nimport '../client/main.html';\n \nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});","import { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","import { Accounts } from 'meteor/accounts-base';\n \n Accounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(), // current time\n    });\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n            <input\n              type=\"text\"\n              ref=\"textInput\"\n              placeholder=\"Type to add new tasks\"\n            />\n          </form>\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n  };\n})(App);\n\n","import React, { Component } from 'react';\n\nimport { Tasks } from '../api/tasks.js';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Tasks.update(this.props.task._id, {\n      $set: { checked: !this.props.task.checked },\n    });\n  }\n\n  deleteThisTask() {\n    Tasks.remove(this.props.task._id);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = this.props.task.checked ? 'checked' : '';\n\n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!!this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        <span className=\"text\">\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\n        </span>\n      </li>\n    );\n  }\n}"]}}]