[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/api/tasks.js                                                             //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Tasks = new Mongo.Collection('tasks');\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/startup/accounts-config.js                                               //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/ui/App.js                                                                //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      // current time\n      owner: Meteor.userId(),\n      // _id of logged in user\n      username: Meteor.user().username // username of logged in user\n\n    }); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => React.createElement(Task, {\n      key: task._id,\n      task: task\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    })) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// imports/ui/Task.js                                                               //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// client/main.js                                                                   //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/App.js","client/main.js"],"names":["module","export","Tasks","Mongo","link","v","Collection","Accounts","ui","config","passwordSignupFields","React","Component","default","ReactDOM","Meteor","withTracker","Task","AccountsUIWrapper","App","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","text","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","owner","userId","username","user","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","_id","render","incompleteCount","bind","currentUser","exportDefault","find","sort","fetch","$ne","count","startup","document","getElementById"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,OAAK,EAAC,MAAIA;AAAX,CAAd;AAAiC,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAEpC,MAAMH,KAAK,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,OAArB,CAAd,C;;;;;;;;;;;ACFP,IAAIC,QAAJ;AAAaP,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACG,UAAQ,CAACF,CAAD,EAAG;AAACE,YAAQ,GAACF,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;AAEZE,QAAQ,CAACC,EAAT,CAAYC,MAAZ,CAAmB;AAClBC,sBAAoB,EAAE;AADJ,CAAnB,E;;;;;;;;;;;ACFD,IAAIC,KAAJ,EAAUC,SAAV;AAAoBZ,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACS,SAAO,CAACR,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ,GAApB;;AAAqBO,WAAS,CAACP,CAAD,EAAG;AAACO,aAAS,GAACP,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAIS,QAAJ;AAAad,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAACS,SAAO,CAACR,CAAD,EAAG;AAACS,YAAQ,GAACT,CAAT;AAAW;;AAAvB,CAAxB,EAAiD,CAAjD;AAAoD,IAAIU,MAAJ;AAAWf,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACW,QAAM,CAACV,CAAD,EAAG;AAACU,UAAM,GAACV,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIW,WAAJ;AAAgBhB,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAuC;AAACY,aAAW,CAACX,CAAD,EAAG;AAACW,eAAW,GAACX,CAAZ;AAAc;;AAA9B,CAAvC,EAAuE,CAAvE;AAA0E,IAAIH,KAAJ;AAAUF,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACF,OAAK,CAACG,CAAD,EAAG;AAACH,SAAK,GAACG,CAAN;AAAQ;;AAAlB,CAA9B,EAAkD,CAAlD;AAAqD,IAAIY,IAAJ;AAASjB,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAACS,SAAO,CAACR,CAAD,EAAG;AAACY,QAAI,GAACZ,CAAL;AAAO;;AAAnB,CAAxB,EAA6C,CAA7C;AAAgD,IAAIa,iBAAJ;AAAsBlB,MAAM,CAACI,IAAP,CAAY,wBAAZ,EAAqC;AAACS,SAAO,CAACR,CAAD,EAAG;AAACa,qBAAiB,GAACb,CAAlB;AAAoB;;AAAhC,CAArC,EAAuE,CAAvE;;AAUpc;AACA,MAAMc,GAAN,SAAkBP,SAAlB,CAA4B;AAC1BQ,aAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,mBAAa,EAAE;AADJ,KAAb;AAGD;;AAEDC,cAAY,CAACC,KAAD,EAAQ;AAClBA,SAAK,CAACC,cAAN,GADkB,CAGlB;;AACA,UAAMC,IAAI,GAAGb,QAAQ,CAACc,WAAT,CAAqB,KAAKC,IAAL,CAAUC,SAA/B,EAA0CC,KAA1C,CAAgDC,IAAhD,EAAb;AAEA9B,SAAK,CAAC+B,MAAN,CAAa;AACXN,UADW;AAEXO,eAAS,EAAE,IAAIC,IAAJ,EAFA;AAEY;AACvBC,WAAK,EAAErB,MAAM,CAACsB,MAAP,EAHI;AAGuB;AAClCC,cAAQ,EAAEvB,MAAM,CAACwB,IAAP,GAAcD,QAJb,CAIwB;;AAJxB,KAAb,EANkB,CAalB;;AACAxB,YAAQ,CAACc,WAAT,CAAqB,KAAKC,IAAL,CAAUC,SAA/B,EAA0CC,KAA1C,GAAkD,EAAlD;AACD;;AAEDS,qBAAmB,GAAG;AACpB,SAAKC,QAAL,CAAc;AACZlB,mBAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,KAAd;AAGD;;AAEDmB,aAAW,GAAG;AACZ,QAAIC,aAAa,GAAG,KAAKtB,KAAL,CAAWuB,KAA/B;;AACA,QAAI,KAAKtB,KAAL,CAAWC,aAAf,EAA8B;AAC5BoB,mBAAa,GAAGA,aAAa,CAACE,MAAd,CAAqBC,IAAI,IAAI,CAACA,IAAI,CAACC,OAAnC,CAAhB;AACD;;AACD,WAAOJ,aAAa,CAACK,GAAd,CAAmBF,IAAD,IACvB,oBAAC,IAAD;AAAM,SAAG,EAAEA,IAAI,CAACG,GAAhB;AAAqB,UAAI,EAAEH;AAA3B,MADK,CAAP;AAGD;;AAEDI,QAAM,GAAG;AACP,WACE;AAAK,eAAS,EAAC;AAAf,OACE,oCACE,+CAAgB,KAAK7B,KAAL,CAAW8B,eAA3B,MADF,EAGE;AAAO,eAAS,EAAC;AAAjB,OACE;AACE,UAAI,EAAC,UADP;AAEE,cAAQ,MAFV;AAGE,aAAO,EAAE,KAAK7B,KAAL,CAAWC,aAHtB;AAIE,aAAO,EAAE,KAAKiB,mBAAL,CAAyBY,IAAzB,CAA8B,IAA9B;AAJX,MADF,yBAHF,EAaE,oBAAC,iBAAD,OAbF,EAeI,KAAK/B,KAAL,CAAWgC,WAAX,GACA;AAAM,eAAS,EAAC,UAAhB;AAA2B,cAAQ,EAAE,KAAK7B,YAAL,CAAkB4B,IAAlB,CAAuB,IAAvB;AAArC,OACE;AACE,UAAI,EAAC,MADP;AAEE,SAAG,EAAC,WAFN;AAGE,iBAAW,EAAC;AAHd,MADF,CADA,GAOU,EAtBd,CADF,EA2BE,gCACG,KAAKV,WAAL,EADH,CA3BF,CADF;AAiCD;;AA5EyB;;AAX5B1C,MAAM,CAACsD,aAAP,CA0FetC,WAAW,CAAC,MAAM;AAC/B,SAAO;AACL4B,SAAK,EAAE1C,KAAK,CAACqD,IAAN,CAAW,EAAX,EAAe;AAAEC,UAAI,EAAE;AAAEtB,iBAAS,EAAE,CAAC;AAAd;AAAR,KAAf,EAA4CuB,KAA5C,EADF;AAELN,mBAAe,EAAEjD,KAAK,CAACqD,IAAN,CAAW;AAAER,aAAO,EAAE;AAAEW,WAAG,EAAE;AAAP;AAAX,KAAX,EAAuCC,KAAvC,EAFZ;AAGLN,eAAW,EAAEtC,MAAM,CAACwB,IAAP;AAHR,GAAP;AAKD,CANyB,CAAX,CAMZpB,GANY,CA1Ff,E;;;;;;;;;;;;;;;;;;;;;ACAA,IAAIR,KAAJ;AAAUX,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACS,SAAO,CAACR,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIU,MAAJ;AAAWf,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACW,QAAM,CAACV,CAAD,EAAG;AAACU,UAAM,GAACV,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAI6C,MAAJ;AAAWlD,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAAC8C,QAAM,CAAC7C,CAAD,EAAG;AAAC6C,UAAM,GAAC7C,CAAP;AAAS;;AAApB,CAAxB,EAA8C,CAA9C;AAAiDL,MAAM,CAACI,IAAP,CAAY,uCAAZ;AAAqD,IAAIe,GAAJ;AAAQnB,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACS,SAAO,CAACR,CAAD,EAAG;AAACc,OAAG,GAACd,CAAJ;AAAM;;AAAlB,CAAnC,EAAuD,CAAvD;AAOhPU,MAAM,CAAC6C,OAAP,CAAe,MAAM;AACnBV,QAAM,CAAC,oBAAC,GAAD,OAAD,EAAUW,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV,CAAN;AACD,CAFD,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","import { Accounts } from 'meteor/accounts-base';\n \n Accounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(), // current time\n      owner: Meteor.userId(),           // _id of logged in user\n      username: Meteor.user().username,  // username of logged in user\n    });\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n})(App);","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]