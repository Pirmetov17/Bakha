[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// imports/api/tasks.js                                                                               //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nmodule.export({\n  Tasks: function () {\n    return Tasks;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar check;\nmodule.link(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function () {\n    function tasksPublication() {\n      return Tasks.find({\n        $or: [{\n          \"private\": {\n            $ne: true\n          }\n        }, {\n          owner: this.userId\n        }]\n      });\n    }\n\n    return tasksPublication;\n  }());\n}\n\nMeteor.methods({\n  'tasks.insert': function (text) {\n    check(text, String); // Make sure the user is logged in before inserting a task\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username\n    });\n  },\n  'tasks.remove': function (taskId) {\n    check(taskId, String);\n    var task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked': function (taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n    var task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        checked: setChecked\n      }\n    });\n  },\n  'tasks.setPrivate': function (taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n    var task = Tasks.findOne(taskId); // Make sure only the task owner can make a task private\n\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        \"private\": setToPrivate\n      }\n    });\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// imports/startup/accounts-config.js                                                                 //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n  /* показывает на сайте */\n\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// imports/ui/AccountsUIWrapper.js                                                                    //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return AccountsUIWrapper;\n  }\n});\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ReactDOM;\nmodule.link(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze: function (v) {\n    Blaze = v;\n  }\n}, 3);\n\nvar AccountsUIWrapper =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(AccountsUIWrapper, _Component);\n\n  function AccountsUIWrapper() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = AccountsUIWrapper.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      // Use Meteor Blaze to render login buttons\n      this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      // Clean up Blaze view\n      Blaze.remove(this.view);\n    }\n\n    return componentWillUnmount;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      // Just render a placeholder container that will be filled in\n      return React.createElement(\"span\", {\n        ref: \"container\"\n      });\n    }\n\n    return render;\n  }();\n\n  return AccountsUIWrapper;\n}(Component);\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// imports/ui/App.js                                                                                  //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ReactDOM;\nmodule.link(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 3);\nvar Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks: function (v) {\n    Tasks = v;\n  }\n}, 4);\nvar Task;\nmodule.link(\"./Task.js\", {\n  \"default\": function (v) {\n    Task = v;\n  }\n}, 5);\nvar AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  \"default\": function (v) {\n    AccountsUIWrapper = v;\n  }\n}, 6);\n\n// App component - represents the whole app\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      hideCompleted: false\n    };\n    return _this;\n  }\n\n  var _proto = App.prototype;\n\n  _proto.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault(); // Find the text field via the React ref\n\n      var text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n      Meteor.call('tasks.insert', text); // Clear form\n\n      ReactDOM.findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  _proto.toggleHideCompleted = function () {\n    function toggleHideCompleted() {\n      this.setState({\n        hideCompleted: !this.state.hideCompleted\n      });\n    }\n\n    return toggleHideCompleted;\n  }();\n\n  _proto.renderTasks = function () {\n    function renderTasks() {\n      var _this2 = this;\n\n      var filteredTasks = this.props.tasks;\n\n      if (this.state.hideCompleted) {\n        filteredTasks = filteredTasks.filter(function (task) {\n          return !task.checked;\n        });\n      }\n\n      return filteredTasks.map(function (task) {\n        var currentUserId = _this2.props.currentUser && _this2.props.currentUser._id;\n        var showPrivateButton = task.owner === currentUserId;\n        return React.createElement(Task, {\n          key: task._id,\n          task: task,\n          showPrivateButton: showPrivateButton\n        });\n      });\n    }\n\n    return renderTasks;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n        className: \"hide-completed\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: this.state.hideCompleted,\n        onClick: this.toggleHideCompleted.bind(this)\n      }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n        className: \"new-task\",\n        onSubmit: this.handleSubmit.bind(this)\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"textInput\",\n        placeholder: \"Type to add new tasks\"\n      })) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n    }\n\n    return render;\n  }();\n\n  return App;\n}(Component);\n\nmodule.exportDefault(withTracker(function () {\n  Meteor.subscribe('tasks');\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// imports/ui/Task.js                                                                                 //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return Task;\n  }\n});\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar classnames;\nmodule.link(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 2);\nvar Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks: function (v) {\n    Tasks = v;\n  }\n}, 3);\n\nvar Task =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(Task, _Component);\n\n  function Task() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Task.prototype;\n\n  _proto.toggleChecked = function () {\n    function toggleChecked() {\n      // Set the checked property to the opposite of its current value\n      Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n    }\n\n    return toggleChecked;\n  }();\n\n  _proto.deleteThisTask = function () {\n    function deleteThisTask() {\n      Meteor.call('tasks.remove', this.props.task._id);\n    }\n\n    return deleteThisTask;\n  }();\n\n  _proto.togglePrivate = function () {\n    function togglePrivate() {\n      Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\n    }\n\n    return togglePrivate;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      // Give tasks a different className when they are checked off,\n      // so that we can style them nicely in CSS\n      var taskClassName = classnames({\n        checked: this.props.task.checked,\n        \"private\": this.props.task.private\n      });\n      return React.createElement(\"li\", {\n        className: taskClassName\n      }, React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: this.deleteThisTask.bind(this)\n      }, \"\\xD7\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: !!this.props.task.checked,\n        onClick: this.toggleChecked.bind(this)\n      }), this.props.showPrivateButton ? React.createElement(\"button\", {\n        className: \"toggle-private\",\n        onClick: this.togglePrivate.bind(this)\n      }, this.props.task.private ? 'Private' : 'Public') : '', React.createElement(\"span\", {\n        className: \"text\"\n      }, React.createElement(\"strong\", null, this.props.task.username), \": \", this.props.task.text));\n    }\n\n    return render;\n  }();\n\n  return Task;\n}(Component);\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// client/main.js                                                                                     //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar render;\nmodule.link(\"react-dom\", {\n  render: function (v) {\n    render = v;\n  }\n}, 2);\nmodule.link(\"./main.html\");\nmodule.link(\"../imports/startup/accounts-config.js\");\nvar App;\nmodule.link(\"../imports/ui/App.js\", {\n  \"default\": function (v) {\n    App = v;\n  }\n}, 3);\nMeteor.startup(function () {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","imports/ui/Task.js","client/main.js"],"names":["module","export","Tasks","Meteor","link","v","Mongo","check","Collection","isServer","publish","tasksPublication","find","$or","$ne","owner","userId","methods","text","String","Error","insert","createdAt","Date","username","users","findOne","taskId","task","private","remove","setChecked","Boolean","update","$set","checked","setToPrivate","Accounts","ui","config","passwordSignupFields","AccountsUIWrapper","React","Component","ReactDOM","Template","Blaze","componentDidMount","view","render","loginButtons","findDOMNode","refs","container","componentWillUnmount","withTracker","Task","App","props","state","hideCompleted","handleSubmit","event","preventDefault","textInput","value","trim","call","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","map","currentUserId","currentUser","_id","showPrivateButton","incompleteCount","bind","exportDefault","subscribe","sort","fetch","count","user","classnames","toggleChecked","deleteThisTask","togglePrivate","taskClassName","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [\n        { private: { $ne: true } },\n        { owner: this.userId },\n      ],\n    });\n  });\n}\n\nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n\n    // Make sure the user is logged in before inserting a task\n    if (! this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username,\n    });\n  },\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n\n    const task = Tasks.findOne(taskId);\n\n    // Make sure only the task owner can make a task private\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { private: setToPrivate } });\n  },\n});\n","import { Accounts } from 'meteor/accounts-base';\n Accounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n  /* показывает на сайте */\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n export default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) { \n      super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Meteor.call('tasks.insert', text);\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n\n      return (\n        <Task\n          key={task._id}\n          task={task}\n          showPrivateButton={showPrivateButton}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  Meteor.subscribe('tasks');\n\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n})(App);\n","import React, { Component } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\nimport { Tasks } from '../api/tasks.js';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private,\n    });\n\n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!!this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        { this.props.showPrivateButton ? (\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\n            { this.props.task.private ? 'Private' : 'Public' }\n          </button>\n        ) : ''}\n\n        <span className=\"text\">\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\n        </span>\n      </li>\n    );\n  }\n}","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport './main.html'\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]