[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.html                                                                                 //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.link(\"./template.main.js\", { \"*\": \"*+\" });\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/template.main.js                                                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.js                                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"./main.html\");\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\n// это функция показывает(обрабатывет)цель\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"imports\":{\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/startup/accounts-config.js                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  //\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/AccountsUIWrapper.js                                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  default: () => AccountsUIWrapper\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\n\nclass AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n  }\n\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n\n  render() {\n    // Just render a placeholder container that will be filled in\n    return React.createElement(\"span\", {\n      ref: \"container\"\n    });\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/App.js                                                                                //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Meteor.call('tasks.insert', text); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n      return React.createElement(Task, {\n        key: task._id,\n        task: task,\n        showPrivateButton: showPrivateButton\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \" aslan (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    })) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  Meteor.subscribe('tasks');\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/Task.js                                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  default: () => Task\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.link(\"classnames\", {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 3);\n\nclass Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private\n    });\n    return React.createElement(\"li\", {\n      className: taskClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisTask.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.task.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), this.props.showPrivateButton ? React.createElement(\"button\", {\n      className: \"toggle-private\",\n      onClick: this.togglePrivate.bind(this)\n    }, this.props.task.private ? 'Private' : 'Public') : '', React.createElement(\"span\", {\n      className: \"text\"\n    }, React.createElement(\"strong\", null, this.props.task.username), \": \", this.props.task.text));\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.js","imports/startup/accounts-config.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","imports/ui/Task.js"],"names":["React","module","link","default","v","Meteor","render","App","startup","document","getElementById","Accounts","ui","config","passwordSignupFields","export","AccountsUIWrapper","Component","ReactDOM","Template","Blaze","componentDidMount","view","loginButtons","findDOMNode","refs","container","componentWillUnmount","remove","withTracker","Tasks","Task","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","text","textInput","value","trim","call","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","currentUserId","currentUser","_id","showPrivateButton","owner","incompleteCount","bind","exportDefault","subscribe","find","sort","createdAt","fetch","$ne","count","user","classnames","toggleChecked","deleteThisTask","togglePrivate","private","taskClassName","username"],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport './main.html'\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n// это функция показывает(обрабатывет)цель\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});","import { Accounts } from 'meteor/accounts-base';\n Accounts.ui.config({\n \t//\n  passwordSignupFields: 'USERNAME_ONLY',\n  \n});","import React, { Component } from 'react';\n/*              */\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n export default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n} ","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) { \n      super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Meteor.call('tasks.insert', text);\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n\n      return (\n        <Task\n          key={task._id}\n          task={task}\n          showPrivateButton={showPrivateButton}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1> aslan ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  Meteor.subscribe('tasks');\n\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n})(App);\n","import React, { Component } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\nimport { Tasks } from '../api/tasks.js';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private,\n    });\n\n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!!this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        { this.props.showPrivateButton ? (\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\n            { this.props.task.private ? 'Private' : 'Public' }\n          </button>\n        ) : ''}\n\n        <span className=\"text\">\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\n        </span>\n      </li>\n    );\n  }\n}"]}}]