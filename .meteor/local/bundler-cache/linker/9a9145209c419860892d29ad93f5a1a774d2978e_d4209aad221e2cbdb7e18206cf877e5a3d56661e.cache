[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.html                                                                                 //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.link(\"./template.main.js\", { \"*\": \"*+\" });\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/template.main.js                                                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.js                                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"./main.html\");\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\n// это функция показывает(обрабатывет)цель\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/api/tasks.js                                                                             //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nconst Tasks = new Mongo.Collection('tasks');\n\n// this is api of tasks \nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [{\n        private: {\n          $ne: true\n        }\n      }, {\n        owner: this.userId\n      }]\n    });\n  });\n} // \n\n\nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String); // Make sure the user is logged in before inserting a task\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    } //отвечает за юзернэйм \n\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username\n    });\n  },\n\n  //добавляет кнопку удаления\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n    const task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n\n  //кнопка где можно ставить галочку что ты сделал это дела \n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n    const task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        checked: setChecked\n      }\n    });\n  },\n\n  //сделать приватным чтобы только владелец видел свой ту ду лист\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n    const task = Tasks.findOne(taskId); // Make sure only the task owner can make a task private\n\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        private: setToPrivate\n      }\n    });\n  }\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/startup/accounts-config.js                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  //на сайте показывает только юзернэйм \n  passwordSignupFields: 'USERNAME_ONLY'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/AccountsUIWrapper.js                                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  default: () => AccountsUIWrapper\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\n\nclass AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n  }\n\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n\n  render() {\n    // Just render a placeholder container that will be filled in\n    return React.createElement(\"span\", {\n      ref: \"container\"\n    });\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/App.js                                                                                //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Meteor.call('tasks.insert', text); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  } //когда вы закончите свои вещи, и вы нажмете на него, и он перечеркнул и стал серым\n\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  } //используется для фильтрации и рендеринга задач\n\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n      return React.createElement(Task, {\n        key: task._id,\n        task: task,\n        showPrivateButton: showPrivateButton\n      });\n    });\n  } ///код который отвечает за дизайн сайта \n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \" to do list  (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    })) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  Meteor.subscribe('tasks');\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/Task.js                                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  default: () => Task\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.link(\"classnames\", {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 3);\n\nclass Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  } //komada dlya udalenie\n\n\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  } //delayet privatnim\n\n\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private\n    }); //показывает на сайте кнопки(удаление добавить и тд)\n\n    return React.createElement(\"li\", {\n      className: taskClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisTask.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.task.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), this.props.showPrivateButton ? React.createElement(\"button\", {\n      className: \"toggle-private\",\n      onClick: this.togglePrivate.bind(this)\n    }, this.props.task.private ? 'Private' : 'Public') : '', React.createElement(\"span\", {\n      className: \"text\"\n    }, React.createElement(\"strong\", null, this.props.task.username), \": \", this.props.task.text));\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.js","imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","imports/ui/Task.js"],"names":["React","module","link","default","v","Meteor","render","App","startup","document","getElementById","export","Tasks","Mongo","check","Collection","isServer","publish","tasksPublication","find","$or","private","$ne","owner","userId","methods","text","String","Error","insert","createdAt","Date","username","users","findOne","taskId","task","remove","setChecked","Boolean","update","$set","checked","setToPrivate","Accounts","ui","config","passwordSignupFields","AccountsUIWrapper","Component","ReactDOM","Template","Blaze","componentDidMount","view","loginButtons","findDOMNode","refs","container","componentWillUnmount","withTracker","Task","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","textInput","value","trim","call","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","map","currentUserId","currentUser","_id","showPrivateButton","incompleteCount","bind","exportDefault","subscribe","sort","fetch","count","user","classnames","toggleChecked","deleteThisTask","togglePrivate","taskClassName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,KAAJ;AAAUC,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACJ,SAAK,GAACI,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIC,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIE,MAAJ;AAAWL,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACI,QAAM,CAACF,CAAD,EAAG;AAACE,UAAM,GAACF,CAAP;AAAS;;AAApB,CAAxB,EAA8C,CAA9C;AAAiDH,MAAM,CAACC,IAAP,CAAY,aAAZ;AAA2BD,MAAM,CAACC,IAAP,CAAY,uCAAZ;AAAqD,IAAIK,GAAJ;AAAQN,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACC,SAAO,CAACC,CAAD,EAAG;AAACG,OAAG,GAACH,CAAJ;AAAM;;AAAlB,CAAnC,EAAuD,CAAvD;AAM3Q;AACAC,MAAM,CAACG,OAAP,CAAe,MAAM;AACnBF,QAAM,CAAC,oBAAC,GAAD,OAAD,EAAUG,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV,CAAN;AACD,CAFD,E;;;;;;;;;;;ACPAT,MAAM,CAACU,MAAP,CAAc;AAACC,OAAK,EAAC,MAAIA;AAAX,CAAd;AAAiC,IAAIP,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIS,KAAJ;AAAUZ,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACW,OAAK,CAACT,CAAD,EAAG;AAACS,SAAK,GAACT,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIU,KAAJ;AAAUb,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACY,OAAK,CAACV,CAAD,EAAG;AAACU,SAAK,GAACV,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAIhK,MAAMQ,KAAK,GAAG,IAAIC,KAAK,CAACE,UAAV,CAAqB,OAArB,CAAd;;AACP;AAGA,IAAIV,MAAM,CAACW,QAAX,EAAqB;AACnB;AACA;AACAX,QAAM,CAACY,OAAP,CAAe,OAAf,EAAwB,SAASC,gBAAT,GAA4B;AAClD,WAAON,KAAK,CAACO,IAAN,CAAW;AAChBC,SAAG,EAAE,CACH;AAAEC,eAAO,EAAE;AAAEC,aAAG,EAAE;AAAP;AAAX,OADG,EAEH;AAAEC,aAAK,EAAE,KAAKC;AAAd,OAFG;AADW,KAAX,CAAP;AAMD,GAPD;AAQD,C,CACD;;;AACAnB,MAAM,CAACoB,OAAP,CAAe;AACb,iBAAeC,IAAf,EAAqB;AACnBZ,SAAK,CAACY,IAAD,EAAOC,MAAP,CAAL,CADmB,CAGnB;;AACA,QAAI,CAAE,KAAKH,MAAX,EAAmB;AACjB,YAAM,IAAInB,MAAM,CAACuB,KAAX,CAAiB,gBAAjB,CAAN;AACD,KANkB,CAOvB;;;AACIhB,SAAK,CAACiB,MAAN,CAAa;AACXH,UADW;AAEXI,eAAS,EAAE,IAAIC,IAAJ,EAFA;AAGXR,WAAK,EAAE,KAAKC,MAHD;AAIXQ,cAAQ,EAAE3B,MAAM,CAAC4B,KAAP,CAAaC,OAAb,CAAqB,KAAKV,MAA1B,EAAkCQ;AAJjC,KAAb;AAMD,GAfY;;AAgBb;AACA,iBAAeG,MAAf,EAAuB;AACrBrB,SAAK,CAACqB,MAAD,EAASR,MAAT,CAAL;AAEA,UAAMS,IAAI,GAAGxB,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAb;;AACA,QAAIC,IAAI,CAACf,OAAL,IAAgBe,IAAI,CAACb,KAAL,KAAe,KAAKC,MAAxC,EAAgD;AAC9C;AACA,YAAM,IAAInB,MAAM,CAACuB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDhB,SAAK,CAACyB,MAAN,CAAaF,MAAb;AACD,GA3BY;;AA4Bb;AACA,qBAAmBA,MAAnB,EAA2BG,UAA3B,EAAuC;AACrCxB,SAAK,CAACqB,MAAD,EAASR,MAAT,CAAL;AACAb,SAAK,CAACwB,UAAD,EAAaC,OAAb,CAAL;AAEA,UAAMH,IAAI,GAAGxB,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAb;;AACA,QAAIC,IAAI,CAACf,OAAL,IAAgBe,IAAI,CAACb,KAAL,KAAe,KAAKC,MAAxC,EAAgD;AAC9C;AACA,YAAM,IAAInB,MAAM,CAACuB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDhB,SAAK,CAAC4B,MAAN,CAAaL,MAAb,EAAqB;AAAEM,UAAI,EAAE;AAAEC,eAAO,EAAEJ;AAAX;AAAR,KAArB;AACD,GAxCY;;AAyCb;AACA,qBAAmBH,MAAnB,EAA2BQ,YAA3B,EAAyC;AACvC7B,SAAK,CAACqB,MAAD,EAASR,MAAT,CAAL;AACAb,SAAK,CAAC6B,YAAD,EAAeJ,OAAf,CAAL;AAEA,UAAMH,IAAI,GAAGxB,KAAK,CAACsB,OAAN,CAAcC,MAAd,CAAb,CAJuC,CAMvC;;AACA,QAAIC,IAAI,CAACb,KAAL,KAAe,KAAKC,MAAxB,EAAgC;AAC9B,YAAM,IAAInB,MAAM,CAACuB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDhB,SAAK,CAAC4B,MAAN,CAAaL,MAAb,EAAqB;AAAEM,UAAI,EAAE;AAAEpB,eAAO,EAAEsB;AAAX;AAAR,KAArB;AACD;;AAtDY,CAAf,E;;;;;;;;;;;ACrBA,IAAIC,QAAJ;AAAa3C,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAAC0C,UAAQ,CAACxC,CAAD,EAAG;AAACwC,YAAQ,GAACxC,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;AACZwC,QAAQ,CAACC,EAAT,CAAYC,MAAZ,CAAmB;AAClB;AACAC,sBAAoB,EAAE;AAFJ,CAAnB,E;;;;;;;;;;;ACDD9C,MAAM,CAACU,MAAP,CAAc;AAACR,SAAO,EAAC,MAAI6C;AAAb,CAAd;AAA+C,IAAIhD,KAAJ,EAAUiD,SAAV;AAAoBhD,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACJ,SAAK,GAACI,CAAN;AAAQ,GAApB;;AAAqB6C,WAAS,CAAC7C,CAAD,EAAG;AAAC6C,aAAS,GAAC7C,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAI8C,QAAJ;AAAajD,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC8C,YAAQ,GAAC9C,CAAT;AAAW;;AAAvB,CAAxB,EAAiD,CAAjD;AAAoD,IAAI+C,QAAJ;AAAalD,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACiD,UAAQ,CAAC/C,CAAD,EAAG;AAAC+C,YAAQ,GAAC/C,CAAT;AAAW;;AAAxB,CAAhC,EAA0D,CAA1D;AAA6D,IAAIgD,KAAJ;AAAUnD,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACkD,OAAK,CAAChD,CAAD,EAAG;AAACgD,SAAK,GAAChD,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;;AAK/Q,MAAM4C,iBAAN,SAAgCC,SAAhC,CAA0C;AACxDI,mBAAiB,GAAG;AAClB;AACA,SAAKC,IAAL,GAAYF,KAAK,CAAC9C,MAAN,CAAa6C,QAAQ,CAACI,YAAtB,EACVL,QAAQ,CAACM,WAAT,CAAqB,KAAKC,IAAL,CAAUC,SAA/B,CADU,CAAZ;AAED;;AACDC,sBAAoB,GAAG;AACrB;AACAP,SAAK,CAACf,MAAN,CAAa,KAAKiB,IAAlB;AACD;;AACDhD,QAAM,GAAG;AACP;AACA,WAAO;AAAM,SAAG,EAAC;AAAV,MAAP;AACD;;AAbuD,C;;;;;;;;;;;ACL1D,IAAIN,KAAJ,EAAUiD,SAAV;AAAoBhD,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACJ,SAAK,GAACI,CAAN;AAAQ,GAApB;;AAAqB6C,WAAS,CAAC7C,CAAD,EAAG;AAAC6C,aAAS,GAAC7C,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAI8C,QAAJ;AAAajD,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC8C,YAAQ,GAAC9C,CAAT;AAAW;;AAAvB,CAAxB,EAAiD,CAAjD;AAAoD,IAAIC,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIwD,WAAJ;AAAgB3D,MAAM,CAACC,IAAP,CAAY,0BAAZ,EAAuC;AAAC0D,aAAW,CAACxD,CAAD,EAAG;AAACwD,eAAW,GAACxD,CAAZ;AAAc;;AAA9B,CAAvC,EAAuE,CAAvE;AAA0E,IAAIQ,KAAJ;AAAUX,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACU,OAAK,CAACR,CAAD,EAAG;AAACQ,SAAK,GAACR,CAAN;AAAQ;;AAAlB,CAA9B,EAAkD,CAAlD;AAAqD,IAAIyD,IAAJ;AAAS5D,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACyD,QAAI,GAACzD,CAAL;AAAO;;AAAnB,CAAxB,EAA6C,CAA7C;AAAgD,IAAI4C,iBAAJ;AAAsB/C,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACC,SAAO,CAACC,CAAD,EAAG;AAAC4C,qBAAiB,GAAC5C,CAAlB;AAAoB;;AAAhC,CAArC,EAAuE,CAAvE;;AAUpc;AACA,MAAMG,GAAN,SAAkB0C,SAAlB,CAA4B;AAC1Ba,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEF,SAAKC,KAAL,GAAa;AACXC,mBAAa,EAAE;AADJ,KAAb;AAGD;;AAEDC,cAAY,CAACC,KAAD,EAAQ;AAClBA,SAAK,CAACC,cAAN,GADkB,CAGlB;;AACA,UAAM1C,IAAI,GAAGwB,QAAQ,CAACM,WAAT,CAAqB,KAAKC,IAAL,CAAUY,SAA/B,EAA0CC,KAA1C,CAAgDC,IAAhD,EAAb;AAEAlE,UAAM,CAACmE,IAAP,CAAY,cAAZ,EAA4B9C,IAA5B,EANkB,CAQlB;;AACAwB,YAAQ,CAACM,WAAT,CAAqB,KAAKC,IAAL,CAAUY,SAA/B,EAA0CC,KAA1C,GAAkD,EAAlD;AACD,GAnByB,CAqB5B;;;AACEG,qBAAmB,GAAG;AACpB,SAAKC,QAAL,CAAc;AACZT,mBAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,KAAd;AAGD,GA1ByB,CA4B5B;;;AACEU,aAAW,GAAG;AACZ,QAAIC,aAAa,GAAG,KAAKb,KAAL,CAAWc,KAA/B;;AACA,QAAI,KAAKb,KAAL,CAAWC,aAAf,EAA8B;AAC5BW,mBAAa,GAAGA,aAAa,CAACE,MAAd,CAAqB1C,IAAI,IAAI,CAACA,IAAI,CAACM,OAAnC,CAAhB;AACD;;AACD,WAAOkC,aAAa,CAACG,GAAd,CAAmB3C,IAAD,IAAU;AACjC,YAAM4C,aAAa,GAAG,KAAKjB,KAAL,CAAWkB,WAAX,IAA0B,KAAKlB,KAAL,CAAWkB,WAAX,CAAuBC,GAAvE;AACA,YAAMC,iBAAiB,GAAG/C,IAAI,CAACb,KAAL,KAAeyD,aAAzC;AAEA,aACE,oBAAC,IAAD;AACE,WAAG,EAAE5C,IAAI,CAAC8C,GADZ;AAEE,YAAI,EAAE9C,IAFR;AAGE,yBAAiB,EAAE+C;AAHrB,QADF;AAOD,KAXM,CAAP;AAYD,GA9CyB,CA+C3B;;;AACC7E,QAAM,GAAG;AACP,WACE;AAAK,eAAS,EAAC;AAAf,OACE,oCACE,kDAAmB,KAAKyD,KAAL,CAAWqB,eAA9B,MADF,EAGE;AAAO,eAAS,EAAC;AAAjB,OACE;AACE,UAAI,EAAC,UADP;AAEE,cAAQ,MAFV;AAGE,aAAO,EAAE,KAAKpB,KAAL,CAAWC,aAHtB;AAIE,aAAO,EAAE,KAAKQ,mBAAL,CAAyBY,IAAzB,CAA8B,IAA9B;AAJX,MADF,yBAHF,EAaE,oBAAC,iBAAD,OAbF,EAeI,KAAKtB,KAAL,CAAWkB,WAAX,GACA;AAAM,eAAS,EAAC,UAAhB;AAA2B,cAAQ,EAAE,KAAKf,YAAL,CAAkBmB,IAAlB,CAAuB,IAAvB;AAArC,OACE;AACE,UAAI,EAAC,MADP;AAEE,SAAG,EAAC,WAFN;AAGE,iBAAW,EAAC;AAHd,MADF,CADA,GAOU,EAtBd,CADF,EA2BE,gCACG,KAAKV,WAAL,EADH,CA3BF,CADF;AAiCD;;AAlFyB;;AAX5B1E,MAAM,CAACqF,aAAP,CAgGe1B,WAAW,CAAC,MAAM;AAC/BvD,QAAM,CAACkF,SAAP,CAAiB,OAAjB;AAEA,SAAO;AACLV,SAAK,EAAEjE,KAAK,CAACO,IAAN,CAAW,EAAX,EAAe;AAAEqE,UAAI,EAAE;AAAE1D,iBAAS,EAAE,CAAC;AAAd;AAAR,KAAf,EAA4C2D,KAA5C,EADF;AAELL,mBAAe,EAAExE,KAAK,CAACO,IAAN,CAAW;AAAEuB,aAAO,EAAE;AAAEpB,WAAG,EAAE;AAAP;AAAX,KAAX,EAAuCoE,KAAvC,EAFZ;AAGLT,eAAW,EAAE5E,MAAM,CAACsF,IAAP;AAHR,GAAP;AAKD,CARyB,CAAX,CAQZpF,GARY,CAhGf,E;;;;;;;;;;;ACAAN,MAAM,CAACU,MAAP,CAAc;AAACR,SAAO,EAAC,MAAI0D;AAAb,CAAd;AAAkC,IAAI7D,KAAJ,EAAUiD,SAAV;AAAoBhD,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACJ,SAAK,GAACI,CAAN;AAAQ,GAApB;;AAAqB6C,WAAS,CAAC7C,CAAD,EAAG;AAAC6C,aAAS,GAAC7C,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAIC,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACD,CAAD,EAAG;AAACC,UAAM,GAACD,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIwF,UAAJ;AAAe3F,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyB;AAACC,SAAO,CAACC,CAAD,EAAG;AAACwF,cAAU,GAACxF,CAAX;AAAa;;AAAzB,CAAzB,EAAoD,CAApD;AAAuD,IAAIQ,KAAJ;AAAUX,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA8B;AAACU,OAAK,CAACR,CAAD,EAAG;AAACQ,SAAK,GAACR,CAAN;AAAQ;;AAAlB,CAA9B,EAAkD,CAAlD;;AAO9P,MAAMyD,IAAN,SAAmBZ,SAAnB,CAA6B;AAC1C4C,eAAa,GAAG;AACd;AACAxF,UAAM,CAACmE,IAAP,CAAY,kBAAZ,EAAgC,KAAKT,KAAL,CAAW3B,IAAX,CAAgB8C,GAAhD,EAAqD,CAAC,KAAKnB,KAAL,CAAW3B,IAAX,CAAgBM,OAAtE;AACD,GAJyC,CAK5C;;;AACEoD,gBAAc,GAAG;AACfzF,UAAM,CAACmE,IAAP,CAAY,cAAZ,EAA4B,KAAKT,KAAL,CAAW3B,IAAX,CAAgB8C,GAA5C;AACD,GARyC,CAS5C;;;AACEa,eAAa,GAAG;AACd1F,UAAM,CAACmE,IAAP,CAAY,kBAAZ,EAAgC,KAAKT,KAAL,CAAW3B,IAAX,CAAgB8C,GAAhD,EAAqD,CAAE,KAAKnB,KAAL,CAAW3B,IAAX,CAAgBf,OAAvE;AACD;;AAEDf,QAAM,GAAG;AACP;AACA;AACA,UAAM0F,aAAa,GAAGJ,UAAU,CAAC;AAC/BlD,aAAO,EAAE,KAAKqB,KAAL,CAAW3B,IAAX,CAAgBM,OADM;AAE/BrB,aAAO,EAAE,KAAK0C,KAAL,CAAW3B,IAAX,CAAgBf;AAFM,KAAD,CAAhC,CAHO,CAQX;;AAEI,WACE;AAAI,eAAS,EAAE2E;AAAf,OACE;AAAQ,eAAS,EAAC,QAAlB;AAA2B,aAAO,EAAE,KAAKF,cAAL,CAAoBT,IAApB,CAAyB,IAAzB;AAApC,cADF,EAKE;AACE,UAAI,EAAC,UADP;AAEE,cAAQ,MAFV;AAGE,aAAO,EAAE,CAAC,CAAC,KAAKtB,KAAL,CAAW3B,IAAX,CAAgBM,OAH7B;AAIE,aAAO,EAAE,KAAKmD,aAAL,CAAmBR,IAAnB,CAAwB,IAAxB;AAJX,MALF,EAYI,KAAKtB,KAAL,CAAWoB,iBAAX,GACA;AAAQ,eAAS,EAAC,gBAAlB;AAAmC,aAAO,EAAE,KAAKY,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB;AAA5C,OACI,KAAKtB,KAAL,CAAW3B,IAAX,CAAgBf,OAAhB,GAA0B,SAA1B,GAAsC,QAD1C,CADA,GAIE,EAhBN,EAkBE;AAAM,eAAS,EAAC;AAAhB,OACE,oCAAS,KAAK0C,KAAL,CAAW3B,IAAX,CAAgBJ,QAAzB,CADF,QACgD,KAAK+B,KAAL,CAAW3B,IAAX,CAAgBV,IADhE,CAlBF,CADF;AAwBD;;AAhDyC,C","file":"/app.js","sourcesContent":["import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport './main.html'\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n// это функция показывает(обрабатывет)цель\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});","\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\nexport const Tasks = new Mongo.Collection('tasks');\n// this is api of tasks \n\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [\n        { private: { $ne: true } },\n        { owner: this.userId },\n      ],\n    });\n  });\n}\n// \nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n\n    // Make sure the user is logged in before inserting a task\n    if (! this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n//отвечает за юзернэйм \n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username,\n    });\n  },\n  //добавляет кнопку удаления\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  //кнопка где можно ставить галочку что ты сделал это дела \n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n  //сделать приватным чтобы только владелец видел свой ту ду лист\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n\n    const task = Tasks.findOne(taskId);\n\n    // Make sure only the task owner can make a task private\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { private: setToPrivate } });\n  },\n});\n","import { Accounts } from 'meteor/accounts-base';\n Accounts.ui.config({\n \t//на сайте показывает только юзернэйм \n  passwordSignupFields: 'USERNAME_ONLY',\n  \n});","import React, { Component } from 'react';\n/*              */\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n export default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n} ","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) { \n      super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Meteor.call('tasks.insert', text);\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n//когда вы закончите свои вещи, и вы нажмете на него, и он перечеркнул и стал серым\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n//используется для фильтрации и рендеринга задач\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n\n      return (\n        <Task\n          key={task._id}\n          task={task}\n          showPrivateButton={showPrivateButton}\n        />\n      );\n    });\n  }\n ///код который отвечает за дизайн сайта \n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1> to do list  ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  Meteor.subscribe('tasks');\n\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n})(App);\n","import React, { Component } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\nimport { Tasks } from '../api/tasks.js';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n//komada dlya udalenie\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n//delayet privatnim\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private,\n    });\n\n//показывает на сайте кнопки(удаление добавить и тд)\n\n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!!this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        { this.props.showPrivateButton ? (\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\n            { this.props.task.private ? 'Private' : 'Public' }\n          </button>\n        ) : ''}\n\n        <span className=\"text\">\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\n        </span>\n      </li>\n    );\n  }\n}\n"]}}]