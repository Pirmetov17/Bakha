[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/api/tasks.js                                                                             //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 2);\nconst Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [{\n        private: {\n          $ne: true\n        }\n      }, {\n        owner: this.userId\n      }]\n    });\n  });\n}\n\nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String); // Make sure the user is logged in before inserting a task\n\n    if (!this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username\n    });\n  },\n\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n    const task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n\n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n    const task = Tasks.findOne(taskId);\n\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        checked: setChecked\n      }\n    });\n  },\n\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n    const task = Tasks.findOne(taskId); // Make sure only the task owner can make a task private\n\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        private: setToPrivate\n      }\n    });\n  }\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/startup/accounts-config.js                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n  /* показывает на сайте */\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/App.js                                                                                //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // Find the text field via the React ref\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Meteor.call('tasks.insert', text); // Clear form\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n      return React.createElement(Task, {\n        key: task._id,\n        task: task,\n        showPrivateButton: showPrivateButton\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    })) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  Meteor.subscribe('tasks');\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// imports/ui/Task.js                                                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nmodule.export({\n  default: () => Task\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.link(\"classnames\", {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 3);\n\nclass Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private\n    });\n    return React.createElement(\"li\", {\n      className: taskClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisTask.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.task.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), this.props.showPrivateButton ? React.createElement(\"button\", {\n      className: \"toggle-private\",\n      onClick: this.togglePrivate.bind(this)\n    }, this.props.task.private ? 'Private' : 'Public') : '', React.createElement(\"span\", {\n      className: \"text\"\n    }, React.createElement(\"strong\", null, this.props.task.username), \": \", this.props.task.text));\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// client/main.js                                                                                   //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"./main.html\");\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/App.js","imports/ui/Task.js","client/main.js"],"names":["module","export","Tasks","Meteor","link","v","Mongo","check","Collection","isServer","publish","tasksPublication","find","$or","private","$ne","owner","userId","methods","text","String","Error","insert","createdAt","Date","username","users","findOne","taskId","task","remove","setChecked","Boolean","update","$set","checked","setToPrivate","Accounts","ui","config","passwordSignupFields","React","Component","default","ReactDOM","withTracker","Task","AccountsUIWrapper","App","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","findDOMNode","refs","textInput","value","trim","call","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","map","currentUserId","currentUser","_id","showPrivateButton","render","incompleteCount","bind","exportDefault","subscribe","sort","fetch","count","user","classnames","toggleChecked","deleteThisTask","togglePrivate","taskClassName","startup","document","getElementById"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,OAAK,EAAC,MAAIA;AAAX,CAAd;AAAiC,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,KAAJ;AAAUN,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACE,OAAK,CAACD,CAAD,EAAG;AAACC,SAAK,GAACD,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIE,KAAJ;AAAUP,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACG,OAAK,CAACF,CAAD,EAAG;AAACE,SAAK,GAACF,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAKhK,MAAMH,KAAK,GAAG,IAAII,KAAK,CAACE,UAAV,CAAqB,OAArB,CAAd;;AAEP,IAAIL,MAAM,CAACM,QAAX,EAAqB;AACnB;AACA;AACAN,QAAM,CAACO,OAAP,CAAe,OAAf,EAAwB,SAASC,gBAAT,GAA4B;AAClD,WAAOT,KAAK,CAACU,IAAN,CAAW;AAChBC,SAAG,EAAE,CACH;AAAEC,eAAO,EAAE;AAAEC,aAAG,EAAE;AAAP;AAAX,OADG,EAEH;AAAEC,aAAK,EAAE,KAAKC;AAAd,OAFG;AADW,KAAX,CAAP;AAMD,GAPD;AAQD;;AAEDd,MAAM,CAACe,OAAP,CAAe;AACb,iBAAeC,IAAf,EAAqB;AACnBZ,SAAK,CAACY,IAAD,EAAOC,MAAP,CAAL,CADmB,CAGnB;;AACA,QAAI,CAAE,KAAKH,MAAX,EAAmB;AACjB,YAAM,IAAId,MAAM,CAACkB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDnB,SAAK,CAACoB,MAAN,CAAa;AACXH,UADW;AAEXI,eAAS,EAAE,IAAIC,IAAJ,EAFA;AAGXR,WAAK,EAAE,KAAKC,MAHD;AAIXQ,cAAQ,EAAEtB,MAAM,CAACuB,KAAP,CAAaC,OAAb,CAAqB,KAAKV,MAA1B,EAAkCQ;AAJjC,KAAb;AAMD,GAfY;;AAgBb,iBAAeG,MAAf,EAAuB;AACrBrB,SAAK,CAACqB,MAAD,EAASR,MAAT,CAAL;AAEA,UAAMS,IAAI,GAAG3B,KAAK,CAACyB,OAAN,CAAcC,MAAd,CAAb;;AACA,QAAIC,IAAI,CAACf,OAAL,IAAgBe,IAAI,CAACb,KAAL,KAAe,KAAKC,MAAxC,EAAgD;AAC9C;AACA,YAAM,IAAId,MAAM,CAACkB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDnB,SAAK,CAAC4B,MAAN,CAAaF,MAAb;AACD,GA1BY;;AA2Bb,qBAAmBA,MAAnB,EAA2BG,UAA3B,EAAuC;AACrCxB,SAAK,CAACqB,MAAD,EAASR,MAAT,CAAL;AACAb,SAAK,CAACwB,UAAD,EAAaC,OAAb,CAAL;AAEA,UAAMH,IAAI,GAAG3B,KAAK,CAACyB,OAAN,CAAcC,MAAd,CAAb;;AACA,QAAIC,IAAI,CAACf,OAAL,IAAgBe,IAAI,CAACb,KAAL,KAAe,KAAKC,MAAxC,EAAgD;AAC9C;AACA,YAAM,IAAId,MAAM,CAACkB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDnB,SAAK,CAAC+B,MAAN,CAAaL,MAAb,EAAqB;AAAEM,UAAI,EAAE;AAAEC,eAAO,EAAEJ;AAAX;AAAR,KAArB;AACD,GAtCY;;AAuCb,qBAAmBH,MAAnB,EAA2BQ,YAA3B,EAAyC;AACvC7B,SAAK,CAACqB,MAAD,EAASR,MAAT,CAAL;AACAb,SAAK,CAAC6B,YAAD,EAAeJ,OAAf,CAAL;AAEA,UAAMH,IAAI,GAAG3B,KAAK,CAACyB,OAAN,CAAcC,MAAd,CAAb,CAJuC,CAMvC;;AACA,QAAIC,IAAI,CAACb,KAAL,KAAe,KAAKC,MAAxB,EAAgC;AAC9B,YAAM,IAAId,MAAM,CAACkB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDnB,SAAK,CAAC+B,MAAN,CAAaL,MAAb,EAAqB;AAAEM,UAAI,EAAE;AAAEpB,eAAO,EAAEsB;AAAX;AAAR,KAArB;AACD;;AAnDY,CAAf,E;;;;;;;;;;;ACpBA,IAAIC,QAAJ;AAAarC,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACiC,UAAQ,CAAChC,CAAD,EAAG;AAACgC,YAAQ,GAAChC,CAAT;AAAW;;AAAxB,CAAnC,EAA6D,CAA7D;AACZgC,QAAQ,CAACC,EAAT,CAAYC,MAAZ,CAAmB;AAClBC,sBAAoB,EAAE;AACtB;;AAFkB,CAAnB,E;;;;;;;;;;;ACDD,IAAIC,KAAJ,EAAUC,SAAV;AAAoB1C,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAACoC,SAAK,GAACpC,CAAN;AAAQ,GAApB;;AAAqBqC,WAAS,CAACrC,CAAD,EAAG;AAACqC,aAAS,GAACrC,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAIuC,QAAJ;AAAa5C,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAACuC,YAAQ,GAACvC,CAAT;AAAW;;AAAvB,CAAxB,EAAiD,CAAjD;AAAoD,IAAIF,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIwC,WAAJ;AAAgB7C,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAuC;AAACyC,aAAW,CAACxC,CAAD,EAAG;AAACwC,eAAW,GAACxC,CAAZ;AAAc;;AAA9B,CAAvC,EAAuE,CAAvE;AAA0E,IAAIH,KAAJ;AAAUF,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACF,OAAK,CAACG,CAAD,EAAG;AAACH,SAAK,GAACG,CAAN;AAAQ;;AAAlB,CAA9B,EAAkD,CAAlD;AAAqD,IAAIyC,IAAJ;AAAS9C,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAACyC,QAAI,GAACzC,CAAL;AAAO;;AAAnB,CAAxB,EAA6C,CAA7C;AAAgD,IAAI0C,iBAAJ;AAAsB/C,MAAM,CAACI,IAAP,CAAY,wBAAZ,EAAqC;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAAC0C,qBAAiB,GAAC1C,CAAlB;AAAoB;;AAAhC,CAArC,EAAuE,CAAvE;;AAUpc;AACA,MAAM2C,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,aAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEF,SAAKC,KAAL,GAAa;AACXC,mBAAa,EAAE;AADJ,KAAb;AAGD;;AAEDC,cAAY,CAACC,KAAD,EAAQ;AAClBA,SAAK,CAACC,cAAN,GADkB,CAGlB;;AACA,UAAMpC,IAAI,GAAGyB,QAAQ,CAACY,WAAT,CAAqB,KAAKC,IAAL,CAAUC,SAA/B,EAA0CC,KAA1C,CAAgDC,IAAhD,EAAb;AAEAzD,UAAM,CAAC0D,IAAP,CAAY,cAAZ,EAA4B1C,IAA5B,EANkB,CAQlB;;AACAyB,YAAQ,CAACY,WAAT,CAAqB,KAAKC,IAAL,CAAUC,SAA/B,EAA0CC,KAA1C,GAAkD,EAAlD;AACD;;AAEDG,qBAAmB,GAAG;AACpB,SAAKC,QAAL,CAAc;AACZX,mBAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,KAAd;AAGD;;AAEDY,aAAW,GAAG;AACZ,QAAIC,aAAa,GAAG,KAAKf,KAAL,CAAWgB,KAA/B;;AACA,QAAI,KAAKf,KAAL,CAAWC,aAAf,EAA8B;AAC5Ba,mBAAa,GAAGA,aAAa,CAACE,MAAd,CAAqBtC,IAAI,IAAI,CAACA,IAAI,CAACM,OAAnC,CAAhB;AACD;;AACD,WAAO8B,aAAa,CAACG,GAAd,CAAmBvC,IAAD,IAAU;AACjC,YAAMwC,aAAa,GAAG,KAAKnB,KAAL,CAAWoB,WAAX,IAA0B,KAAKpB,KAAL,CAAWoB,WAAX,CAAuBC,GAAvE;AACA,YAAMC,iBAAiB,GAAG3C,IAAI,CAACb,KAAL,KAAeqD,aAAzC;AAEA,aACE,oBAAC,IAAD;AACE,WAAG,EAAExC,IAAI,CAAC0C,GADZ;AAEE,YAAI,EAAE1C,IAFR;AAGE,yBAAiB,EAAE2C;AAHrB,QADF;AAOD,KAXM,CAAP;AAYD;;AAEDC,QAAM,GAAG;AACP,WACE;AAAK,eAAS,EAAC;AAAf,OACE,oCACE,+CAAgB,KAAKvB,KAAL,CAAWwB,eAA3B,MADF,EAGE;AAAO,eAAS,EAAC;AAAjB,OACE;AACE,UAAI,EAAC,UADP;AAEE,cAAQ,MAFV;AAGE,aAAO,EAAE,KAAKvB,KAAL,CAAWC,aAHtB;AAIE,aAAO,EAAE,KAAKU,mBAAL,CAAyBa,IAAzB,CAA8B,IAA9B;AAJX,MADF,yBAHF,EAaE,oBAAC,iBAAD,OAbF,EAeI,KAAKzB,KAAL,CAAWoB,WAAX,GACA;AAAM,eAAS,EAAC,UAAhB;AAA2B,cAAQ,EAAE,KAAKjB,YAAL,CAAkBsB,IAAlB,CAAuB,IAAvB;AAArC,OACE;AACE,UAAI,EAAC,MADP;AAEE,SAAG,EAAC,WAFN;AAGE,iBAAW,EAAC;AAHd,MADF,CADA,GAOU,EAtBd,CADF,EA2BE,gCACG,KAAKX,WAAL,EADH,CA3BF,CADF;AAiCD;;AAhFyB;;AAX5BhE,MAAM,CAAC4E,aAAP,CA8Fe/B,WAAW,CAAC,MAAM;AAC/B1C,QAAM,CAAC0E,SAAP,CAAiB,OAAjB;AAEA,SAAO;AACLX,SAAK,EAAEhE,KAAK,CAACU,IAAN,CAAW,EAAX,EAAe;AAAEkE,UAAI,EAAE;AAAEvD,iBAAS,EAAE,CAAC;AAAd;AAAR,KAAf,EAA4CwD,KAA5C,EADF;AAELL,mBAAe,EAAExE,KAAK,CAACU,IAAN,CAAW;AAAEuB,aAAO,EAAE;AAAEpB,WAAG,EAAE;AAAP;AAAX,KAAX,EAAuCiE,KAAvC,EAFZ;AAGLV,eAAW,EAAEnE,MAAM,CAAC8E,IAAP;AAHR,GAAP;AAKD,CARyB,CAAX,CAQZjC,GARY,CA9Ff,E;;;;;;;;;;;ACAAhD,MAAM,CAACC,MAAP,CAAc;AAAC0C,SAAO,EAAC,MAAIG;AAAb,CAAd;AAAkC,IAAIL,KAAJ,EAAUC,SAAV;AAAoB1C,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAACoC,SAAK,GAACpC,CAAN;AAAQ,GAApB;;AAAqBqC,WAAS,CAACrC,CAAD,EAAG;AAACqC,aAAS,GAACrC,CAAV;AAAY;;AAA9C,CAApB,EAAoE,CAApE;AAAuE,IAAIF,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAI6E,UAAJ;AAAelF,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAAC6E,cAAU,GAAC7E,CAAX;AAAa;;AAAzB,CAAzB,EAAoD,CAApD;AAAuD,IAAIH,KAAJ;AAAUF,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACF,OAAK,CAACG,CAAD,EAAG;AAACH,SAAK,GAACG,CAAN;AAAQ;;AAAlB,CAA9B,EAAkD,CAAlD;;AAO9P,MAAMyC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC1CyC,eAAa,GAAG;AACd;AACAhF,UAAM,CAAC0D,IAAP,CAAY,kBAAZ,EAAgC,KAAKX,KAAL,CAAWrB,IAAX,CAAgB0C,GAAhD,EAAqD,CAAC,KAAKrB,KAAL,CAAWrB,IAAX,CAAgBM,OAAtE;AACD;;AAEDiD,gBAAc,GAAG;AACfjF,UAAM,CAAC0D,IAAP,CAAY,cAAZ,EAA4B,KAAKX,KAAL,CAAWrB,IAAX,CAAgB0C,GAA5C;AACD;;AAEDc,eAAa,GAAG;AACdlF,UAAM,CAAC0D,IAAP,CAAY,kBAAZ,EAAgC,KAAKX,KAAL,CAAWrB,IAAX,CAAgB0C,GAAhD,EAAqD,CAAE,KAAKrB,KAAL,CAAWrB,IAAX,CAAgBf,OAAvE;AACD;;AAED2D,QAAM,GAAG;AACP;AACA;AACA,UAAMa,aAAa,GAAGJ,UAAU,CAAC;AAC/B/C,aAAO,EAAE,KAAKe,KAAL,CAAWrB,IAAX,CAAgBM,OADM;AAE/BrB,aAAO,EAAE,KAAKoC,KAAL,CAAWrB,IAAX,CAAgBf;AAFM,KAAD,CAAhC;AAKA,WACE;AAAI,eAAS,EAAEwE;AAAf,OACE;AAAQ,eAAS,EAAC,QAAlB;AAA2B,aAAO,EAAE,KAAKF,cAAL,CAAoBT,IAApB,CAAyB,IAAzB;AAApC,cADF,EAKE;AACE,UAAI,EAAC,UADP;AAEE,cAAQ,MAFV;AAGE,aAAO,EAAE,CAAC,CAAC,KAAKzB,KAAL,CAAWrB,IAAX,CAAgBM,OAH7B;AAIE,aAAO,EAAE,KAAKgD,aAAL,CAAmBR,IAAnB,CAAwB,IAAxB;AAJX,MALF,EAYI,KAAKzB,KAAL,CAAWsB,iBAAX,GACA;AAAQ,eAAS,EAAC,gBAAlB;AAAmC,aAAO,EAAE,KAAKa,aAAL,CAAmBV,IAAnB,CAAwB,IAAxB;AAA5C,OACI,KAAKzB,KAAL,CAAWrB,IAAX,CAAgBf,OAAhB,GAA0B,SAA1B,GAAsC,QAD1C,CADA,GAIE,EAhBN,EAkBE;AAAM,eAAS,EAAC;AAAhB,OACE,oCAAS,KAAKoC,KAAL,CAAWrB,IAAX,CAAgBJ,QAAzB,CADF,QACgD,KAAKyB,KAAL,CAAWrB,IAAX,CAAgBV,IADhE,CAlBF,CADF;AAwBD;;AA9CyC,C;;;;;;;;;;;ACP5C,IAAIsB,KAAJ;AAAUzC,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAACoC,SAAK,GAACpC,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIF,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIoE,MAAJ;AAAWzE,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAACqE,QAAM,CAACpE,CAAD,EAAG;AAACoE,UAAM,GAACpE,CAAP;AAAS;;AAApB,CAAxB,EAA8C,CAA9C;AAAiDL,MAAM,CAACI,IAAP,CAAY,aAAZ;AAA2BJ,MAAM,CAACI,IAAP,CAAY,uCAAZ;AAAqD,IAAI4C,GAAJ;AAAQhD,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACuC,SAAO,CAACtC,CAAD,EAAG;AAAC2C,OAAG,GAAC3C,CAAJ;AAAM;;AAAlB,CAAnC,EAAuD,CAAvD;AAO3QF,MAAM,CAACoF,OAAP,CAAe,MAAM;AACnBd,QAAM,CAAC,oBAAC,GAAD,OAAD,EAAUe,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAV,CAAN;AACD,CAFD,E","file":"/app.js","sourcesContent":["\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only publish tasks that are public or belong to the current user\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [\n        { private: { $ne: true } },\n        { owner: this.userId },\n      ],\n    });\n  });\n}\n\nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n\n    // Make sure the user is logged in before inserting a task\n    if (! this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username,\n    });\n  },\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== this.userId) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n\n    const task = Tasks.findOne(taskId);\n\n    // Make sure only the task owner can make a task private\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, { $set: { private: setToPrivate } });\n  },\n});\n","import { Accounts } from 'meteor/accounts-base';\n Accounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n  /* показывает на сайте */\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) { \n      super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Meteor.call('tasks.insert', text);\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n\n      return (\n        <Task\n          key={task._id}\n          task={task}\n          showPrivateButton={showPrivateButton}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  Meteor.subscribe('tasks');\n\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n})(App);\n","import React, { Component } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\nimport { Tasks } from '../api/tasks.js';\n\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n\n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  render() {\n    // Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private,\n    });\n\n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!!this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        { this.props.showPrivateButton ? (\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\n            { this.props.task.private ? 'Private' : 'Public' }\n          </button>\n        ) : ''}\n\n        <span className=\"text\">\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\n        </span>\n      </li>\n    );\n  }\n}","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport './main.html'\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]