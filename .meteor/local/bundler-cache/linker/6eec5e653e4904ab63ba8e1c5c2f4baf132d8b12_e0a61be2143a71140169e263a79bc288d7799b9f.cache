[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/main.html                                                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./template.main.js\", { \"*\": \"*+\" });\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/template.main.js                                                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar render;\nmodule.link(\"react-dom\", {\n  render: function (v) {\n    render = v;\n  }\n}, 2);\nvar App;\nmodule.link(\"../imports/ui/App.js\", {\n  \"default\": function (v) {\n    App = v;\n  }\n}, 3);\nmodule.link(\"../client/main.html\");\nMeteor.startup(function () {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/tasks.js                                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  Tasks: function () {\n    return Tasks;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Tasks = new Mongo.Collection('tasks');\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/App.js                                                                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ReactDOM;\nmodule.link(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 2);\nvar Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks: function (v) {\n    Tasks = v;\n  }\n}, 3);\nvar Task;\nmodule.link(\"./Task.js\", {\n  \"default\": function (v) {\n    Task = v;\n  }\n}, 4);\nvar AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  \"default\": function (v) {\n    AccountsUIWrapper = v;\n  }\n}, 5);\n\n// App component - represents the whole app\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      hideCompleted: false\n    };\n    return _this;\n  }\n\n  var _proto = App.prototype;\n\n  _proto.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault(); // Find the text field via the React ref\n\n      var text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n      Tasks.insert({\n        text: text,\n        createdAt: new Date() // current time\n\n      }); // Clear form\n\n      ReactDOM.findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  _proto.toggleHideCompleted = function () {\n    function toggleHideCompleted() {\n      this.setState({\n        hideCompleted: !this.state.hideCompleted\n      });\n    }\n\n    return toggleHideCompleted;\n  }();\n\n  _proto.renderTasks = function () {\n    function renderTasks() {\n      var filteredTasks = this.props.tasks;\n\n      if (this.state.hideCompleted) {\n        filteredTasks = filteredTasks.filter(function (task) {\n          return !task.checked;\n        });\n      }\n\n      return filteredTasks.map(function (task) {\n        return React.createElement(Task, {\n          key: task._id,\n          task: task\n        });\n      });\n    }\n\n    return renderTasks;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n        className: \"hide-completed\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: this.state.hideCompleted,\n        onClick: this.toggleHideCompleted.bind(this)\n      }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), React.createElement(\"form\", {\n        className: \"new-task\",\n        onSubmit: this.handleSubmit.bind(this)\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"textInput\",\n        placeholder: \"Type to add new tasks\"\n      }))), React.createElement(\"ul\", null, this.renderTasks()));\n    }\n\n    return render;\n  }();\n\n  return App;\n}(Component);\n\nmodule.exportDefault(withTracker(function () {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count()\n  };\n})(App));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/Task.js                                                                                          //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nmodule.export({\n  \"default\": function () {\n    return Task;\n  }\n});\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks: function (v) {\n    Tasks = v;\n  }\n}, 1);\n\nvar Task =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(Task, _Component);\n\n  function Task() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Task.prototype;\n\n  _proto.toggleChecked = function () {\n    function toggleChecked() {\n      // Set the checked property to the opposite of its current value\n      Tasks.update(this.props.task._id, {\n        $set: {\n          checked: !this.props.task.checked\n        }\n      });\n    }\n\n    return toggleChecked;\n  }();\n\n  _proto.deleteThisTask = function () {\n    function deleteThisTask() {\n      Tasks.remove(this.props.task._id);\n    }\n\n    return deleteThisTask;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      // Give tasks a different className when they are checked off,\n      // so that we can style them nicely in CSS\n      var taskClassName = this.props.task.checked ? 'checked' : '';\n      return React.createElement(\"li\", {\n        className: taskClassName\n      }, React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: this.deleteThisTask.bind(this)\n      }, \"\\xD7\"), React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: !!this.props.task.checked,\n        onClick: this.toggleChecked.bind(this)\n      }), React.createElement(\"span\", {\n        className: \"text\"\n      }, this.props.task.text));\n    }\n\n    return render;\n  }();\n\n  return Task;\n}(Component);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.js","imports/api/tasks.js","imports/ui/App.js","imports/ui/Task.js"],"names":["React","module","link","v","Meteor","render","App","startup","document","getElementById","export","Tasks","Mongo","Collection","Component","ReactDOM","withTracker","Task","AccountsUIWrapper","props","state","hideCompleted","handleSubmit","event","preventDefault","text","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","_id","incompleteCount","bind","exportDefault","find","sort","fetch","$ne","count","toggleChecked","update","$set","deleteThisTask","remove","taskClassName"],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n \nimport App from '../imports/ui/App.js';\nimport '../client/main.html';\n \nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});","import { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n    constructor(props) {\n    super(props);\n     this.state = {\n      hideCompleted: false,\n    };\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(), // current time\n    });\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n    toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n   let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n                    <h1>Todo List ({this.props.incompleteCount})</h1>\n \n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n                    <AccountsUIWrapper />\n\n\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n            <input\n              type=\"text\"\n              ref=\"textInput\"\n              placeholder=\"Type to add new tasks\"\n            />\n          </form>\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  return {\n   tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n   incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n  };\n})(App);\n\n","import React, { Component } from 'react';\n\nimport { Tasks } from '../api/tasks.js';\n\n // Task component - represents a single todo item\nexport default class Task extends Component {\n\ttoggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Tasks.update(this.props.task._id, {\n      $set: { checked: !this.props.task.checked },\n    });\n  }\n\n   deleteThisTask() {\n    Tasks.remove(this.props.task._id);\n  }\n\n    render() {\n    \t// Give tasks a different className when they are checked off,\n    // so that we can style them nicely in CSS\n    const taskClassName = this.props.task.checked ? 'checked' : '';\n\n    return (\n    <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n         <input\n          type=\"checkbox\"\n          readOnly\n          checked={!!this.props.task.checked}\n           onClick={this.toggleChecked.bind(this)}\n        />\n         <span className=\"text\">{this.props.task.text}</span>\n      </li>\n    );\n  }\n}"]}}]