[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/api/tasks.js                                                                        //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nmodule.export({\n  Tasks: function () {\n    return Tasks;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Tasks = new Mongo.Collection('tasks');\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/startup/accounts-config.js                                                          //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/ui/App.js                                                                           //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ReactDOM;\nmodule.link(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 3);\nvar Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks: function (v) {\n    Tasks = v;\n  }\n}, 4);\nvar Task;\nmodule.link(\"./Task.js\", {\n  \"default\": function (v) {\n    Task = v;\n  }\n}, 5);\nvar AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  \"default\": function (v) {\n    AccountsUIWrapper = v;\n  }\n}, 6);\n\n// App component - represents the whole app\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inheritsLoose2.default)(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      hideCompleted: false\n    };\n    return _this;\n  }\n\n  var _proto = App.prototype;\n\n  _proto.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault(); // Find the text field via the React ref\n\n      var text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(),\n        // current time\n        owner: Meteor.userId(),\n        // _id of logged in user\n        username: Meteor.user().username // username of logged in user\n\n      }); // Clear form\n\n      ReactDOM.findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  _proto.toggleHideCompleted = function () {\n    function toggleHideCompleted() {\n      this.setState({\n        hideCompleted: !this.state.hideCompleted\n      });\n    }\n\n    return toggleHideCompleted;\n  }();\n\n  _proto.renderTasks = function () {\n    function renderTasks() {\n      var filteredTasks = this.props.tasks;\n\n      if (this.state.hideCompleted) {\n        filteredTasks = filteredTasks.filter(function (task) {\n          return !task.checked;\n        });\n      }\n\n      return filteredTasks.map(function (task) {\n        return React.createElement(Task, {\n          key: task._id,\n          task: task\n        });\n      });\n    }\n\n    return renderTasks;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Todo List (\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n        className: \"hide-completed\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        readOnly: true,\n        checked: this.state.hideCompleted,\n        onClick: this.toggleHideCompleted.bind(this)\n      }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n        className: \"new-task\",\n        onSubmit: this.handleSubmit.bind(this)\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: \"textInput\",\n        placeholder: \"Type to add new tasks\"\n      })) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n    }\n\n    return render;\n  }();\n\n  return App;\n}(Component);\n\nmodule.exportDefault(withTracker(function () {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// imports/ui/Task.js                                                                          //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                             //\n// client/main.js                                                                              //\n//                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                               //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar render;\nmodule.link(\"react-dom\", {\n  render: function (v) {\n    render = v;\n  }\n}, 2);\nmodule.link(\"../imports/startup/accounts-config.js\");\nvar App;\nmodule.link(\"../imports/ui/App.js\", {\n  \"default\": function (v) {\n    App = v;\n  }\n}, 3);\nMeteor.startup(function () {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/App.js","client/main.js"],"names":["module","export","Tasks","Mongo","link","v","Collection","Accounts","ui","config","passwordSignupFields","React","Component","ReactDOM","Meteor","withTracker","Task","AccountsUIWrapper","App","props","state","hideCompleted","handleSubmit","event","preventDefault","text","findDOMNode","refs","textInput","value","trim","insert","createdAt","Date","owner","userId","username","user","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","_id","render","incompleteCount","bind","currentUser","exportDefault","find","sort","fetch","$ne","count","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","import { Accounts } from 'meteor/accounts-base';\n \n Accounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.js';\nimport AccountsUIWrapper from './AccountsUIWrapper.js';\n\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n    Tasks.insert({\n      text,\n      createdAt: new Date(), // current time\n      owner: Meteor.userId(),           // _id of logged in user\n      username: Meteor.user().username,  // username of logged in user\n    });\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n\n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n\n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  return {\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n})(App);","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]